// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<choose /> execution cases [a] at least not dangerous 1`] = `
"Seq [
  1. emit {{
     subtype: event,
     fullName: [a] at least not dangerous
  }},
  2. choose {{
     ref: {
       id: 1,
       current: bar
     },
     selector: {
       id: 2r,
       type: seq,
       group: step,
       data: [
         {
           id: 2o,
           type: single,
           group: step,
           data: {
             id: 2n,
             type: compute,
             group: cmd,
             data: {}
           }
         },
         {
           id: 2q,
           type: single,
           group: step,
           data: {
             id: 2p,
             type: update,
             group: cmd,
             data: {
               store: {
                 id: 1,
                 current: bar
               }
             }
           }
         }
       ]
     },
     cases: {
       foo: {
         id: 2u,
         type: seq,
         group: step,
         data: [
           {
             id: 2t,
             type: single,
             group: step,
             data: {
               id: 2s,
               type: compute,
               group: cmd,
               data: {}
             }
           }
         ]
       },
       bar: {
         id: 2x,
         type: seq,
         group: step,
         data: [
           {
             id: 2w,
             type: single,
             group: step,
             data: {
               id: 2v,
               type: compute,
               group: cmd,
               data: {}
             }
           }
         ]
       }
     }
  }},
  3. run {{}},
  4. [
     *  run {{}}
  ]
]"
`;

exports[`<choose /> execution cases [a] at least not dangerous 2`] = `
Object {
  "data": Array [
    Object {
      "data": Object {
        "data": Object {
          "fullName": "[a] at least not dangerous",
          "subtype": "event",
        },
        "group": "cmd",
        "id": "2y",
        "type": "emit",
      },
      "group": "step",
      "id": "2z",
      "type": "single",
    },
    Object {
      "data": Object {
        "cases": Object {
          "bar": Object {
            "data": Array [
              Object {
                "data": Object {
                  "data": Object {
                    "reduce": [Function],
                  },
                  "group": "cmd",
                  "id": "2v",
                  "type": "compute",
                },
                "group": "step",
                "id": "2w",
                "type": "single",
              },
            ],
            "group": "step",
            "id": "2x",
            "type": "seq",
          },
          "foo": Object {
            "data": Array [
              Object {
                "data": Object {
                  "data": Object {
                    "reduce": [Function],
                  },
                  "group": "cmd",
                  "id": "2s",
                  "type": "compute",
                },
                "group": "step",
                "id": "2t",
                "type": "single",
              },
            ],
            "group": "step",
            "id": "2u",
            "type": "seq",
          },
        },
        "ref": Object {
          "current": "bar",
          "id": "1",
        },
        "selector": Object {
          "data": Array [
            Object {
              "data": Object {
                "data": Object {
                  "reduce": [Function],
                },
                "group": "cmd",
                "id": "2n",
                "type": "compute",
              },
              "group": "step",
              "id": "2o",
              "type": "single",
            },
            Object {
              "data": Object {
                "data": Object {
                  "store": Object {
                    "current": "bar",
                    "id": "1",
                  },
                },
                "group": "cmd",
                "id": "2p",
                "type": "update",
              },
              "group": "step",
              "id": "2q",
              "type": "single",
            },
          ],
          "group": "step",
          "id": "2r",
          "type": "seq",
        },
      },
      "group": "step",
      "id": "30",
      "type": "choose",
    },
    Object {
      "data": Object {
        "data": Object {
          "runner": [MockFunction],
        },
        "group": "cmd",
        "id": "31",
        "type": "run",
      },
      "group": "step",
      "id": "32",
      "type": "single",
    },
    Object {
      "data": Array [
        Object {
          "data": Object {
            "data": Object {
              "runner": [Function],
            },
            "group": "cmd",
            "id": "2k",
            "type": "run",
          },
          "group": "step",
          "id": "2l",
          "type": "single",
        },
      ],
      "group": "step",
      "id": "2m",
      "type": "multi",
    },
  ],
  "group": "step",
  "id": "33",
  "type": "seq",
}
`;
