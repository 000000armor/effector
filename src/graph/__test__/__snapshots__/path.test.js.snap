// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`smoke 1`] = `
Array [
  Array [
    Object {
      "type": "root",
      "value": Object {
        "atom": Atom {
          "activeChildren": Array [],
          "equality": null,
          "id": 2,
          "kind": 21,
          "status": 2,
          "value": Object {
            "dispatch": [Function],
            "epic": [Function],
            "getState": [Function],
            "graphite": Object {
              "cmd": Compute {
                "data": Object {
                  "reduce": [Function],
                },
              },
              "next": Multi {
                "data": Set {},
              },
              "seq": Seq {
                "data": Array [
                  Single {
                    "data": Compute {
                      "data": Object {
                        "reduce": [Function],
                      },
                    },
                  },
                  Multi {
                    "data": Set {},
                  },
                ],
              },
              "step": Single {
                "data": Compute {
                  "data": Object {
                    "reduce": [Function],
                  },
                },
              },
            },
            "id": "1",
            "kind": 1,
            "map": [Function],
            "on": [Function],
            "replaceReducer": [Function],
            "reset": [Function],
            "setState": [Function],
            "subscribe": [Function],
            "thru": [Function],
            "to": [Function],
            "watch": [Function],
            "withProps": [Function],
            Symbol(observable): [Function],
          },
        },
        "key": "abc",
      },
    },
    "field key",
    "plain",
  ],
  Array [
    Object {
      "type": "root",
      "value": Object {
        "atom": Atom {
          "activeChildren": Array [],
          "equality": null,
          "id": 2,
          "kind": 21,
          "status": 2,
          "value": Object {
            "dispatch": [Function],
            "epic": [Function],
            "getState": [Function],
            "graphite": Object {
              "cmd": Compute {
                "data": Object {
                  "reduce": [Function],
                },
              },
              "next": Multi {
                "data": Set {},
              },
              "seq": Seq {
                "data": Array [
                  Single {
                    "data": Compute {
                      "data": Object {
                        "reduce": [Function],
                      },
                    },
                  },
                  Multi {
                    "data": Set {},
                  },
                ],
              },
              "step": Single {
                "data": Compute {
                  "data": Object {
                    "reduce": [Function],
                  },
                },
              },
            },
            "id": "1",
            "kind": 1,
            "map": [Function],
            "on": [Function],
            "replaceReducer": [Function],
            "reset": [Function],
            "setState": [Function],
            "subscribe": [Function],
            "thru": [Function],
            "to": [Function],
            "watch": [Function],
            "withProps": [Function],
            Symbol(observable): [Function],
          },
        },
        "key": "abc",
      },
    },
    "field atom",
    "derived",
    "store",
    "plain",
  ],
]
`;
