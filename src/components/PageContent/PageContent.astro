---
import type { MarkdownHeading } from "astro";
import type { CollectionEntry } from "astro:content";
import MoreMenu from "../RightSidebar/MoreMenu.astro";
import TableOfContents from "../RightSidebar/TableOfContents";

type Props = {
  title: string;
  headings: MarkdownHeading[];
  translations: { lang: string; slug: string }[];
  githubEditUrl: string;
};

const { title, headings, githubEditUrl, translations } = Astro.props;
---

<article id="article" class="content">
  <section class="main-section">
    <div class="heading-section">
      <h1 class="content-title" id="overview">{title}</h1>
      {
        translations.length && (
          <span class="translations">
            [
            {translations.map((tr) => (
              <a href={`/${tr.lang}/${tr.slug}`}>{tr.lang}</a>
            ))}
            ]
          </span>
        )
      }
    </div>
    <nav class="block sm:hidden">
      <TableOfContents client:media="(max-width: 50em)" headings={headings} />
    </nav>
    <slot />
  </section>
  <nav class="block sm:hidden">
    <MoreMenu editHref={githubEditUrl} />
  </nav>
</article>

<style>
  .content {
    padding: 0;
    max-width: 75ch;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .content > section {
    margin-bottom: 4rem;
  }

  .block {
    display: block;
  }

  .heading-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .heading-section h1 {
    margin: 0;
  }

  .heading-section .translations {
    font-size: 1rem;
  }

  @media (min-width: 50em) {
    .sm\:hidden {
      display: none;
    }
  }
</style>
