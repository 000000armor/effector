/**
 * Flowtype definitions for node-path
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.8.2
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 * @flow
 */

import type {Fork} from '../types'
import {ASTNode} from './types'
import {Path} from './path'
import {Scope} from './scope'
export type NodePath<N = any, V = any> = {
  node: N,
  parent: any,
  scope: any,
  replace: $PropertyType<Path<>, 'replace'>,
  prune(...args: any[]): any,
  _computeNode(): any,
  _computeParent(): any,
  _computeScope(): Scope | null,
  getValueProperty(name: any): any,
  needsParens(assumeExpressionContext?: boolean): boolean,
  canBeFirstInStatement(): boolean,
  firstInStatement(): boolean,
} & Path<V>
export interface NodePathConstructor {
  new<N: ASTNode, V>(value: any, parentPath?: any, name?: any): NodePath<N, V>;
}
declare export default function nodePathPlugin(fork: Fork): NodePathConstructor
