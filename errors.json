{
  "flowVersion": "0.102.0-rc",
  "jsonVersion": "2",
  "errors": [
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
        "type": "LibFile",
        "start": {"line": 28, "column": 30, "offset": 592},
        "end": {"line": 28, "column": 36, "offset": 599},
        "context": {
          "28": "  declare type ArrayMethod = Exclude<$Keys<[]>, number>;"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "Exclude"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
        "type": "LibFile",
        "start": {"line": 180, "column": 16, "offset": 5667},
        "end": {"line": 180, "column": 25, "offset": 5677},
        "context": {"180": "        state: ImmerState,"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "ImmerState"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " without 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
          "type": "LibFile",
          "start": {"line": 233, "column": 38, "offset": 7610},
          "end": {"line": 233, "column": 40, "offset": 7613},
          "context": {"233": "  declare export interface ImmerState<T> {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
        "type": "LibFile",
        "start": {"line": 184, "column": 26, "offset": 5773},
        "end": {"line": 184, "column": 35, "offset": 5783},
        "context": {
          "184": "      onDelete?: (state: ImmerState, prop: string | number) => void,"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "ImmerState"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " without 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
          "type": "LibFile",
          "start": {"line": 233, "column": 38, "offset": 7610},
          "end": {"line": 233, "column": 40, "offset": 7613},
          "context": {"233": "  declare export interface ImmerState<T> {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
        "type": "LibFile",
        "start": {"line": 185, "column": 24, "offset": 5840},
        "end": {"line": 185, "column": 33, "offset": 5850},
        "context": {"185": "      onCopy?: (state: ImmerState) => void"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "ImmerState"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " without 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
          "type": "LibFile",
          "start": {"line": 233, "column": 38, "offset": 7610},
          "end": {"line": 233, "column": 40, "offset": 7613},
          "context": {"233": "  declare export interface ImmerState<T> {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
        "type": "LibFile",
        "start": {"line": 234, "column": 14, "offset": 7629},
        "end": {"line": 234, "column": 23, "offset": 7639},
        "context": {"234": "    parent?: ImmerState;"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "ImmerState"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " without 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
          "type": "LibFile",
          "start": {"line": 233, "column": 38, "offset": 7610},
          "end": {"line": 233, "column": 40, "offset": 7613},
          "context": {"233": "  declare export interface ImmerState<T> {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/immer_v1.12.1.js",
        "type": "LibFile",
        "start": {"line": 239, "column": 7, "offset": 7720},
        "end": {"line": 239, "column": 30, "offset": 7744},
        "context": {"239": "      [index: number]: boolean"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Multiple indexers are not supported."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/parcel-bundler_v1.10.1.js",
        "type": "LibFile",
        "start": {"line": 178, "column": 17, "offset": 3948},
        "end": {"line": 178, "column": 57, "offset": 3989},
        "context": {
          "178": "      options?: ParcelBundler$ParcelBundler$ParcelOptions"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "ParcelBundler$ParcelBundler$ParcelOptions"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/parcel-bundler_v1.10.1.js",
        "type": "LibFile",
        "start": {"line": 182, "column": 23, "offset": 4137},
        "end": {"line": 182, "column": 62, "offset": 4177},
        "context": {
          "182": "    bundle(): Promise<ParcelBundler$ParcelBundler$ParcelBundle>;"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "ParcelBundler$ParcelBundler$ParcelBundle"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/terser_v3.14.1.js",
        "type": "LibFile",
        "start": {"line": 13, "column": 37, "offset": 336},
        "end": {"line": 13, "column": 48, "offset": 348},
        "context": {"13": "  import type { RawSourceMap } from \"source-map\";"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "source-map"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/flowgen/terser_v3.14.1.js",
        "type": "LibFile",
        "start": {"line": 252, "column": 21, "offset": 7669},
        "end": {"line": 252, "column": 26, "offset": 7675},
        "context": {"252": "    static propdoc: Record<string, string>;"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "Record"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "lint",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/rollup.js",
        "type": "LibFile",
        "start": {"line": 227, "column": 13, "offset": 5617},
        "end": {"line": 227, "column": 33, "offset": 5638},
        "context": {"227": "    +input: $Subtype<InputOption>;"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Deprecated utility. Using "},
        {"kind": "Code", "text": "$Subtype"},
        {"kind": "Text", "text": " types is not recommended! ("},
        {"kind": "Code", "text": "deprecated-utility"},
        {"kind": "Text", "text": ")"}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "lint",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/rollup.js",
        "type": "LibFile",
        "start": {"line": 408, "column": 13, "offset": 10291},
        "end": {"line": 408, "column": 62, "offset": 10341},
        "context": {
          "408": "    +input: $Subtype<string[] | {[entryName: string]: string}>;"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Deprecated utility. Using "},
        {"kind": "Code", "text": "$Subtype"},
        {"kind": "Text", "text": " types is not recommended! ("},
        {"kind": "Code", "text": "deprecated-utility"},
        {"kind": "Text", "text": ")"}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "lint",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/styled-components.js",
        "type": "LibFile",
        "start": {"line": 222, "column": 64, "offset": 7568},
        "end": {"line": 224, "column": 1, "offset": 7641},
        "context": {
          "222": "type $npm$styledComponents$StyledComponentsComponentListKeys = $Subtype<",
          "223": "  $Keys<$npm$styledComponents$StyledComponentsComponentList>,",
          "224": ">"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Deprecated utility. Using "},
        {"kind": "Code", "text": "$Subtype"},
        {"kind": "Text", "text": " types is not recommended! ("},
        {"kind": "Code", "text": "deprecated-utility"},
        {"kind": "Text", "text": ")"}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "lint",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/styled-components.js",
        "type": "LibFile",
        "start": {"line": 369, "column": 70, "offset": 16812},
        "end": {"line": 371, "column": 1, "offset": 16891},
        "context": {
          "369": "type $npm$styledComponents$StyledComponentsNativeComponentListKeys = $Subtype<",
          "370": "  $Keys<$npm$styledComponents$StyledComponentsNativeComponentList>,",
          "371": ">"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Deprecated utility. Using "},
        {"kind": "Code", "text": "$Subtype"},
        {"kind": "Text", "text": " types is not recommended! ("},
        {"kind": "Code", "text": "deprecated-utility"},
        {"kind": "Text", "text": ")"}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "lint",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/vue_v2.x.x.js",
        "type": "LibFile",
        "start": {"line": 229, "column": 48, "offset": 7254},
        "end": {"line": 229, "column": 60, "offset": 7267},
        "context": {
          "229": " $refs: { [key: string]: Vue | Element | Array<$Subtype<Vue>> | Array<$Subtype<Element>>};"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Deprecated utility. Using "},
        {"kind": "Code", "text": "$Subtype"},
        {"kind": "Text", "text": " types is not recommended! ("},
        {"kind": "Code", "text": "deprecated-utility"},
        {"kind": "Text", "text": ")"}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "lint",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/vue_v2.x.x.js",
        "type": "LibFile",
        "start": {"line": 229, "column": 71, "offset": 7277},
        "end": {"line": 229, "column": 87, "offset": 7294},
        "context": {
          "229": " $refs: { [key: string]: Vue | Element | Array<$Subtype<Vue>> | Array<$Subtype<Element>>};"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Deprecated utility. Using "},
        {"kind": "Code", "text": "$Subtype"},
        {"kind": "Text", "text": " types is not recommended! ("},
        {"kind": "Code", "text": "deprecated-utility"},
        {"kind": "Text", "text": ")"}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "parse",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/errors.json",
        "type": "JsonFile",
        "start": {"line": 1, "column": 1, "offset": 0},
        "end": {"line": 1, "column": 0, "offset": 0},
        "context": {"1": ""}
      },
      "rootLoc": null,
      "messageMarkup": [{"kind": "Text", "text": "Unexpected end of input"}],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/ast-types/types.js.flow",
        "type": "SourceFile",
        "start": {"line": 15, "column": 26, "offset": 372},
        "end": {"line": 15, "column": 29, "offset": 376},
        "context": {
          "15": "export type Omit<T, K> = Pick<T, Exclude<$Keys<T>, K>>"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "Pick"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/ast-types/types.js.flow",
        "type": "SourceFile",
        "start": {"line": 15, "column": 34, "offset": 380},
        "end": {"line": 15, "column": 40, "offset": 387},
        "context": {
          "15": "export type Omit<T, K> = Pick<T, Exclude<$Keys<T>, K>>"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "Exclude"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/index.js.flow",
        "type": "SourceFile",
        "start": {"line": 10, "column": 24, "offset": 241},
        "end": {"line": 10, "column": 34, "offset": 252},
        "context": {"10": "import * as types from 'ast-types'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "ast-types"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/index.js.flow",
        "type": "SourceFile",
        "start": {"line": 15, "column": 29, "offset": 440},
        "end": {"line": 15, "column": 39, "offset": 451},
        "context": {"15": "declare export {visit} from 'ast-types'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "ast-types"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/lib/lines.js.flow",
        "type": "SourceFile",
        "start": {"line": 11, "column": 26, "offset": 283},
        "end": {"line": 11, "column": 36, "offset": 294},
        "context": {"11": "import {namedTypes} from 'ast-types'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "ast-types"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/lib/mapping.js.flow",
        "type": "SourceFile",
        "start": {"line": 10, "column": 28, "offset": 248},
        "end": {"line": 10, "column": 38, "offset": 259},
        "context": {"10": "import { namedTypes } from \"ast-types\";"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "ast-types"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/lib/options.js.flow",
        "type": "SourceFile",
        "start": {"line": 10, "column": 22, "offset": 242},
        "end": {"line": 10, "column": 38, "offset": 259},
        "context": {"10": "import { Omit } from \"ast-types/types\";"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "ast-types/types"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/lib/options.js.flow",
        "type": "SourceFile",
        "start": {"line": 175, "column": 33, "offset": 5008},
        "end": {"line": 175, "column": 40, "offset": 5016},
        "context": {"175": "export type NormalizedOptions = Required<"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "Required"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/parsers/_babel_options.js.flow",
        "type": "SourceFile",
        "start": {"line": 10, "column": 45, "offset": 272},
        "end": {"line": 10, "column": 59, "offset": 287},
        "context": {
          "10": "import { ParserOptions, ParserPlugin } from \"@babel/parser\";"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "@babel/parser"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/recast/parsers/babel.js.flow",
        "type": "SourceFile",
        "start": {"line": 10, "column": 37, "offset": 255},
        "end": {"line": 10, "column": 51, "offset": 270},
        "context": {
          "10": "import { parse as babelParse } from \"@babel/parser\";"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "@babel/parser"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/@effector/redux-adapter/index.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 15, "offset": 23},
        "end": {"line": 3, "column": 34, "offset": 43},
        "context": {"3": "export * from '../../../src/redux'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "../../../src/redux"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/postinstall.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 25, "offset": 85},
        "end": {"line": 5, "column": 33, "offset": 94},
        "context": {"5": "const flowgen = require('flowgen')"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "flowgen"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/postinstall.js",
        "type": "SourceFile",
        "start": {"line": 72, "column": 25, "offset": 1307},
        "end": {"line": 72, "column": 34, "offset": 1317},
        "context": {
          "72": "const lockfileData = fs.existsSync('./flow-typed/flow.lock')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/postinstall.js",
        "type": "SourceFile",
        "start": {"line": 72, "column": 22, "offset": 1304},
        "end": {"line": 72, "column": 60, "offset": 1343},
        "context": {
          "72": "const lockfileData = fs.existsSync('./flow-typed/flow.lock')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "fs.existsSync"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "existsSync"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": "module "},
            {"kind": "Code", "text": "fs-extra"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/postinstall.js",
          "type": "SourceFile",
          "start": {"line": 4, "column": 12, "offset": 41},
          "end": {"line": 4, "column": 30, "offset": 60},
          "context": {"4": "const fs = require('fs-extra')"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/postinstall.js",
        "type": "SourceFile",
        "start": {"line": 232, "column": 5, "offset": 5563},
        "end": {"line": 232, "column": 47, "offset": 5606},
        "context": {"232": "    require(`${typesPackageName}/package.json`)"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "The parameter passed to "},
        {"kind": "Code", "text": "require"},
        {"kind": "Text", "text": " must be a string literal."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
        "type": "SourceFile",
        "start": {"line": 18, "column": 6, "offset": 335},
        "end": {"line": 18, "column": 20, "offset": 350},
        "context": {"18": "    (props.landscape && !queries.portrait)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
        "type": "SourceFile",
        "start": {"line": 17, "column": 5, "offset": 290},
        "end": {"line": 18, "column": 42, "offset": 372},
        "context": {
          "17": "    (props.portrait && queries.portrait) ||",
          "18": "    (props.landscape && !queries.portrait)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot return "},
        {
          "kind": "Code",
          "text": "(props.portrait && queries.portrait) || (props.landscape && (!queries.portrait))"
        },
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "boolean"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
          "type": "SourceFile",
          "start": {"line": 6, "column": 17, "offset": 94},
          "end": {"line": 6, "column": 23, "offset": 101},
          "context": {"6": "    landscape?: boolean,"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
          "type": "SourceFile",
          "start": {"line": 13, "column": 4, "offset": 168},
          "end": {"line": 13, "column": 10, "offset": 175},
          "context": {"13": "): boolean {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
        "type": "SourceFile",
        "start": {"line": 41, "column": 6, "offset": 802},
        "end": {"line": 41, "column": 16, "offset": 813},
        "context": {"41": "    (props.large && queries.large)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
        "type": "SourceFile",
        "start": {"line": 39, "column": 5, "offset": 723},
        "end": {"line": 41, "column": 34, "offset": 831},
        "context": {
          "39": "    (props.small && queries.small) ||",
          "40": "    (props.medium && queries.medium) ||",
          "41": "    (props.large && queries.large)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot return "},
        {
          "kind": "Code",
          "text": "(props.small && queries.small) || (props.medium && queries.medium) || (props.large && queries.large)"
        },
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "boolean"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
          "type": "SourceFile",
          "start": {"line": 26, "column": 13, "offset": 479},
          "end": {"line": 26, "column": 19, "offset": 486},
          "context": {"26": "    large?: boolean,"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/recipes/media-queries/queryCheck.js",
          "type": "SourceFile",
          "start": {"line": 35, "column": 4, "offset": 591},
          "end": {"line": 35, "column": 10, "offset": 598},
          "context": {"35": "): boolean {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/babel/__tests__/fixtures/create-effect/index.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 26, "offset": 134},
        "end": {"line": 11, "column": 1, "offset": 169},
        "context": {
          "7": "const baz = createEffect({",
          "8": "  handler() {",
          "9": "    return 0",
          "10": "  },",
          "11": "})"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/babel/__tests__/fixtures/create-effect/index.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 26, "offset": 134},
        "end": {"line": 11, "column": 1, "offset": 169},
        "context": {
          "7": "const baz = createEffect({",
          "8": "  handler() {",
          "9": "    return 0",
          "10": "  },",
          "11": "})"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createEffect"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "effectName"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object literal"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/babel/__tests__/fixtures/create-effect/index.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 26, "offset": 134},
          "end": {"line": 11, "column": 1, "offset": 169},
          "context": {
            "7": "const baz = createEffect({",
            "8": "  handler() {",
            "9": "    return 0",
            "10": "  },",
            "11": "})"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 299, "column": 16, "offset": 7266},
          "end": {"line": 299, "column": 21, "offset": 7272},
          "context": {"299": "  effectName?: string,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/babel/__tests__/fixtures/create-event/index.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 25, "offset": 130},
        "end": {"line": 7, "column": 38, "offset": 144},
        "context": {"7": "const baz = createEvent({name: 'nice'})"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/babel/__tests__/fixtures/create-event/index.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 25, "offset": 130},
        "end": {"line": 7, "column": 38, "offset": 144},
        "context": {"7": "const baz = createEvent({name: 'nice'})"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createEvent"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "eventName"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object literal"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/babel/__tests__/fixtures/create-event/index.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 25, "offset": 130},
          "end": {"line": 7, "column": 38, "offset": 144},
          "context": {"7": "const baz = createEvent({name: 'nice'})"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 52, "offset": 7174},
          "end": {"line": 296, "column": 57, "offset": 7180},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 31, "column": 28, "offset": 808},
        "end": {"line": 31, "column": 35, "offset": 816},
        "context": {"31": "  const showBar = show(bar.graphite)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 31, "column": 24, "offset": 804},
        "end": {"line": 31, "column": 35, "offset": 816},
        "context": {"31": "  const showBar = show(bar.graphite)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "bar.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 41, "column": 40, "offset": 728},
          "end": {"line": 41, "column": 47, "offset": 736},
          "context": {"41": "  map<T>(fn: (payload: Payload) => T): Event<T>;"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 36, "column": 29, "offset": 927},
        "end": {"line": 36, "column": 36, "offset": 935},
        "context": {"36": "  const showBar2 = show(bar.graphite)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 36, "column": 25, "offset": 923},
        "end": {"line": 36, "column": 36, "offset": 935},
        "context": {"36": "  const showBar2 = show(bar.graphite)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "bar.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 41, "column": 40, "offset": 728},
          "end": {"line": 41, "column": 47, "offset": 736},
          "context": {"41": "  map<T>(fn: (payload: Payload) => T): Event<T>;"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 44, "column": 28, "offset": 1268},
        "end": {"line": 44, "column": 35, "offset": 1276},
        "context": {"44": "  const showFoo = show(foo.graphite)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 44, "column": 24, "offset": 1264},
        "end": {"line": 44, "column": 35, "offset": 1276},
        "context": {"44": "  const showFoo = show(foo.graphite)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "foo.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
          "type": "SourceFile",
          "start": {"line": 18, "column": 14, "offset": 299},
          "end": {"line": 18, "column": 26, "offset": 312},
          "context": {"18": "  const foo: Event<number> = createEvent('foo')"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 45, "column": 33, "offset": 1310},
        "end": {"line": 45, "column": 40, "offset": 1318},
        "context": {"45": "  const showStore = show(store1.graphite)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 45, "column": 26, "offset": 1303},
        "end": {"line": 45, "column": 40, "offset": 1318},
        "context": {"45": "  const showStore = show(store1.graphite)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "store1.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
          "type": "SourceFile",
          "start": {"line": 20, "column": 17, "offset": 393},
          "end": {"line": 20, "column": 29, "offset": 406},
          "context": {
            "20": "  const store1: Store<string> = createStore('foo').on(bar, (state, bar) =>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 46, "column": 34, "offset": 1353},
        "end": {"line": 46, "column": 41, "offset": 1361},
        "context": {"46": "  const showStore2 = show(store2.graphite)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 46, "column": 27, "offset": 1346},
        "end": {"line": 46, "column": 41, "offset": 1361},
        "context": {"46": "  const showStore2 = show(store2.graphite)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "store2.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 93, "column": 60, "offset": 2292},
          "end": {"line": 93, "column": 67, "offset": 2300},
          "context": {
            "93": "  map<T>(fn: (state: State, lastState?: T) => T, _: void): Store<T>;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 77, "column": 17, "offset": 1958},
        "end": {"line": 77, "column": 24, "offset": 1966},
        "context": {
          "77": "  expect(show(a.graphite)).toMatchSnapshot('store a')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 77, "column": 15, "offset": 1956},
        "end": {"line": 77, "column": 24, "offset": 1966},
        "context": {
          "77": "  expect(show(a.graphite)).toMatchSnapshot('store a')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "a.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 78, "column": 19, "offset": 2014},
        "end": {"line": 78, "column": 26, "offset": 2022},
        "context": {
          "78": "  expect(show(foo.graphite)).toMatchSnapshot('event foo')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 78, "column": 15, "offset": 2010},
        "end": {"line": 78, "column": 26, "offset": 2022},
        "context": {
          "78": "  expect(show(foo.graphite)).toMatchSnapshot('event foo')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "foo.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 61, "offset": 7183},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 79, "column": 22, "offset": 2075},
        "end": {"line": 79, "column": 29, "offset": 2083},
        "context": {
          "79": "  expect(show(mapped.graphite)).toMatchSnapshot('mapped')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 79, "column": 15, "offset": 2068},
        "end": {"line": 79, "column": 29, "offset": 2083},
        "context": {
          "79": "  expect(show(mapped.graphite)).toMatchSnapshot('mapped')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "mapped.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 93, "column": 60, "offset": 2292},
          "end": {"line": 93, "column": 67, "offset": 2300},
          "context": {
            "93": "  map<T>(fn: (state: State, lastState?: T) => T, _: void): Store<T>;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/rfc1.test.js",
        "type": "SourceFile",
        "start": {"line": 20, "column": 12, "offset": 407},
        "end": {"line": 20, "column": 25, "offset": 421},
        "context": {"20": "      from(createStore(0))"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/rfc1.test.js",
        "type": "SourceFile",
        "start": {"line": 20, "column": 12, "offset": 407},
        "end": {"line": 20, "column": 25, "offset": 421},
        "context": {"20": "      from(createStore(0))"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "from"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "createStore(...)"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "as"},
        {
          "kind": "Text",
          "text": " because a call signature declaring the expected parameter / return type is missing in "
        },
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscriber"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " in the first argument of property "},
        {"kind": "Code", "text": "subscribe"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/most.js",
          "type": "SourceFile",
          "start": {"line": 54, "column": 25, "offset": 1299},
          "end": {"line": 54, "column": 37, "offset": 1312},
          "context": {
            "54": "  subscribe(subscriber: Subscriber<A>): Subscription<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 100, "column": 23, "offset": 2530},
          "end": {"line": 100, "column": 43, "offset": 2551},
          "context": {
            "100": "  subscribe(listener: (state: State) => any): Subscription;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/rfc1.test.js",
        "type": "SourceFile",
        "start": {"line": 25, "column": 26, "offset": 574},
        "end": {"line": 25, "column": 31, "offset": 580},
        "context": {"25": "    const store1$ = from(store1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/rfc1.test.js",
        "type": "SourceFile",
        "start": {"line": 25, "column": 26, "offset": 574},
        "end": {"line": 25, "column": 31, "offset": 580},
        "context": {"25": "    const store1$ = from(store1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "from"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "store1"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "as"},
        {
          "kind": "Text",
          "text": " because a call signature declaring the expected parameter / return type is missing in "
        },
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscriber"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " in the first argument of property "},
        {"kind": "Code", "text": "subscribe"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow/most.js",
          "type": "SourceFile",
          "start": {"line": 54, "column": 25, "offset": 1299},
          "end": {"line": 54, "column": 37, "offset": 1312},
          "context": {
            "54": "  subscribe(subscriber: Subscriber<A>): Subscription<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 100, "column": 23, "offset": 2530},
          "end": {"line": 100, "column": 43, "offset": 2551},
          "context": {
            "100": "  subscribe(listener: (state: State) => any): Subscription;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/rfc1.test.js",
        "type": "SourceFile",
        "start": {"line": 246, "column": 24, "offset": 6634},
        "end": {"line": 246, "column": 32, "offset": 6643},
        "context": {"246": "  const ClickedTimes = withProps("}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "withProps"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 38, "column": 5, "offset": 1217},
        "end": {"line": 38, "column": 10, "offset": 1223},
        "context": {
          "38": "    sample({sampler: foo, source: foo, target: bar})"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 38, "column": 5, "offset": 1217},
        "end": {"line": 38, "column": 52, "offset": 1265},
        "context": {
          "38": "    sample({sampler: foo, source: foo, target: bar})"
        }
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot call "},
          {"kind": "Code", "text": "sample"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {"kind": "Text", "text": "Either property "},
            {"kind": "Code", "text": "sampler"},
            {"kind": "Text", "text": " is missing in "},
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "object type"}]
            },
            {"kind": "Text", "text": " but exists in "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or property "},
            {"kind": "Code", "text": "sampler"},
            {"kind": "Text", "text": " is missing in "},
            {
              "kind": "Reference",
              "referenceId": "3",
              "message": [{"kind": "Text", "text": "object type"}]
            },
            {"kind": "Text", "text": " but exists in "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": " is incompatible with "},
            {
              "kind": "Reference",
              "referenceId": "4",
              "message": [
                {"kind": "Text", "text": ""},
                {"kind": "Code", "text": "Store"},
                {"kind": "Text", "text": ""}
              ]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": " is incompatible with "},
            {
              "kind": "Reference",
              "referenceId": "5",
              "message": [
                {"kind": "Text", "text": ""},
                {"kind": "Code", "text": "Store"},
                {"kind": "Text", "text": ""}
              ]
            },
            {"kind": "Text", "text": "."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 380, "column": 43, "offset": 9171},
          "end": {"line": 384, "column": 2, "offset": 9238},
          "context": {
            "380": "declare export function sample<A>(config: {|",
            "381": "  +source: Unit<A>,",
            "382": "  +clock: Unit<any>,",
            "383": "  +target?: Unit<A>,",
            "384": "|}): Unit<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
          "type": "SourceFile",
          "start": {"line": 38, "column": 12, "offset": 1224},
          "end": {"line": 38, "column": 51, "offset": 1264},
          "context": {
            "38": "    sample({sampler: foo, source: foo, target: bar})"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 385, "column": 49, "offset": 9297},
          "end": {"line": 390, "column": 2, "offset": 9392},
          "context": {
            "385": "declare export function sample<A, B, C>(config: {|",
            "386": "  +source: Unit<A>,",
            "387": "  +clock: Unit<B>,",
            "389": "  fn(source: A, clock: B): C,",
            "390": "|}): Unit<C>"
          }
        },
        "4": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 392, "column": 11, "offset": 9448},
          "end": {"line": 392, "column": 18, "offset": 9456},
          "context": {"392": "  source: Store<A>,"}
        },
        "5": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 405, "column": 11, "offset": 9799},
          "end": {"line": 405, "column": 18, "offset": 9807},
          "context": {"405": "  source: Store<A>,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 42, "column": 5, "offset": 1350},
        "end": {"line": 42, "column": 10, "offset": 1356},
        "context": {"42": "    sample({foo})"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 42, "column": 5, "offset": 1350},
        "end": {"line": 42, "column": 17, "offset": 1363},
        "context": {"42": "    sample({foo})"}
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot call "},
          {"kind": "Code", "text": "sample"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {"kind": "Text", "text": "Either property "},
            {"kind": "Code", "text": "foo"},
            {"kind": "Text", "text": " is missing in "},
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "object type"}]
            },
            {"kind": "Text", "text": " but exists in "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or property "},
            {"kind": "Code", "text": "foo"},
            {"kind": "Text", "text": " is missing in "},
            {
              "kind": "Reference",
              "referenceId": "3",
              "message": [{"kind": "Text", "text": "object type"}]
            },
            {"kind": "Text", "text": " but exists in "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": " is incompatible with "},
            {
              "kind": "Reference",
              "referenceId": "4",
              "message": [
                {"kind": "Text", "text": ""},
                {"kind": "Code", "text": "Store"},
                {"kind": "Text", "text": ""}
              ]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or "},
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "object literal"}]
            },
            {"kind": "Text", "text": " is incompatible with "},
            {
              "kind": "Reference",
              "referenceId": "5",
              "message": [
                {"kind": "Text", "text": ""},
                {"kind": "Code", "text": "Store"},
                {"kind": "Text", "text": ""}
              ]
            },
            {"kind": "Text", "text": "."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 380, "column": 43, "offset": 9171},
          "end": {"line": 384, "column": 2, "offset": 9238},
          "context": {
            "380": "declare export function sample<A>(config: {|",
            "381": "  +source: Unit<A>,",
            "382": "  +clock: Unit<any>,",
            "383": "  +target?: Unit<A>,",
            "384": "|}): Unit<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
          "type": "SourceFile",
          "start": {"line": 42, "column": 12, "offset": 1357},
          "end": {"line": 42, "column": 16, "offset": 1362},
          "context": {"42": "    sample({foo})"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 385, "column": 49, "offset": 9297},
          "end": {"line": 390, "column": 2, "offset": 9392},
          "context": {
            "385": "declare export function sample<A, B, C>(config: {|",
            "386": "  +source: Unit<A>,",
            "387": "  +clock: Unit<B>,",
            "389": "  fn(source: A, clock: B): C,",
            "390": "|}): Unit<C>"
          }
        },
        "4": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 392, "column": 11, "offset": 9448},
          "end": {"line": 392, "column": 18, "offset": 9456},
          "context": {"392": "  source: Store<A>,"}
        },
        "5": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 405, "column": 11, "offset": 9799},
          "end": {"line": 405, "column": 18, "offset": 9807},
          "context": {"405": "  source: Store<A>,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 61, "column": 7, "offset": 1977},
        "end": {"line": 61, "column": 12, "offset": 1983},
        "context": {
          "61": "      sample(A, B, (A, B) => B, greedy).watch(e => spy(e))"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 61, "column": 7, "offset": 1977},
        "end": {"line": 61, "column": 39, "offset": 2010},
        "context": {
          "61": "      sample(A, B, (A, B) => B, greedy).watch(e => spy(e))"
        }
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot call "},
          {"kind": "Code", "text": "sample"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {
              "kind": "Text",
              "text": "Either no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "3",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "4",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "5",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "6",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "7",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "8",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 380, "column": 31, "offset": 9159},
          "end": {"line": 384, "column": 12, "offset": 9248},
          "context": {
            "380": "declare export function sample<A>(config: {|",
            "381": "  +source: Unit<A>,",
            "382": "  +clock: Unit<any>,",
            "383": "  +target?: Unit<A>,",
            "384": "|}): Unit<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 385, "column": 31, "offset": 9279},
          "end": {"line": 390, "column": 12, "offset": 9402},
          "context": {
            "385": "declare export function sample<A, B, C>(config: {|",
            "386": "  +source: Unit<A>,",
            "387": "  +clock: Unit<B>,",
            "389": "  fn(source: A, clock: B): C,",
            "390": "|}): Unit<C>"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 391, "column": 31, "offset": 9433},
          "end": {"line": 394, "column": 11, "offset": 9491},
          "context": {
            "391": "declare export function sample<A>(",
            "392": "  source: Store<A>,",
            "393": "  clock?: Store<any>,",
            "394": "): Store<A>"
          }
        },
        "4": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 395, "column": 31, "offset": 9522},
          "end": {"line": 398, "column": 11, "offset": 9601},
          "context": {
            "395": "declare export function sample<A>(",
            "396": "  source: Event<A> | Effect<A, any, any>,",
            "397": "  clock: Store<any>,",
            "398": "): Event<A>"
          }
        },
        "5": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 399, "column": 31, "offset": 9632},
          "end": {"line": 402, "column": 11, "offset": 9746},
          "context": {
            "399": "declare export function sample<A>(",
            "400": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "401": "  clock: Event<any> | Effect<any, any, any>,",
            "402": "): Event<A>"
          }
        },
        "6": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 404, "column": 31, "offset": 9778},
          "end": {"line": 408, "column": 11, "offset": 9873},
          "context": {
            "404": "declare export function sample<A, B, C>(",
            "405": "  source: Store<A>,",
            "406": "  clock: Store<B>,",
            "407": "  fn: (source: A, clock: B) => C,",
            "408": "): Store<C>"
          }
        },
        "7": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 409, "column": 31, "offset": 9904},
          "end": {"line": 413, "column": 11, "offset": 10021},
          "context": {
            "409": "declare export function sample<A, B, C>(",
            "410": "  source: Event<A> | Effect<A, any, any>,",
            "411": "  clock: Store<B>,",
            "412": "  fn: (source: A, clock: B) => C,",
            "413": "): Event<A>"
          }
        },
        "8": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 414, "column": 31, "offset": 10052},
          "end": {"line": 418, "column": 11, "offset": 10202},
          "context": {
            "414": "declare export function sample<A, B, C>(",
            "415": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "416": "  clock: Event<B> | Effect<B, any, any>,",
            "417": "  fn: (source: A, clock: B) => C,",
            "418": "): Event<C>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 73, "column": 7, "offset": 2226},
        "end": {"line": 73, "column": 12, "offset": 2232},
        "context": {
          "73": "      sample(B, A, B => B, greedy).watch(e => spy(e))"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 73, "column": 7, "offset": 2226},
        "end": {"line": 73, "column": 34, "offset": 2254},
        "context": {
          "73": "      sample(B, A, B => B, greedy).watch(e => spy(e))"
        }
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot call "},
          {"kind": "Code", "text": "sample"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {
              "kind": "Text",
              "text": "Either no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "3",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "4",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "5",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "6",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "7",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "8",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 380, "column": 31, "offset": 9159},
          "end": {"line": 384, "column": 12, "offset": 9248},
          "context": {
            "380": "declare export function sample<A>(config: {|",
            "381": "  +source: Unit<A>,",
            "382": "  +clock: Unit<any>,",
            "383": "  +target?: Unit<A>,",
            "384": "|}): Unit<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 385, "column": 31, "offset": 9279},
          "end": {"line": 390, "column": 12, "offset": 9402},
          "context": {
            "385": "declare export function sample<A, B, C>(config: {|",
            "386": "  +source: Unit<A>,",
            "387": "  +clock: Unit<B>,",
            "389": "  fn(source: A, clock: B): C,",
            "390": "|}): Unit<C>"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 391, "column": 31, "offset": 9433},
          "end": {"line": 394, "column": 11, "offset": 9491},
          "context": {
            "391": "declare export function sample<A>(",
            "392": "  source: Store<A>,",
            "393": "  clock?: Store<any>,",
            "394": "): Store<A>"
          }
        },
        "4": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 395, "column": 31, "offset": 9522},
          "end": {"line": 398, "column": 11, "offset": 9601},
          "context": {
            "395": "declare export function sample<A>(",
            "396": "  source: Event<A> | Effect<A, any, any>,",
            "397": "  clock: Store<any>,",
            "398": "): Event<A>"
          }
        },
        "5": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 399, "column": 31, "offset": 9632},
          "end": {"line": 402, "column": 11, "offset": 9746},
          "context": {
            "399": "declare export function sample<A>(",
            "400": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "401": "  clock: Event<any> | Effect<any, any, any>,",
            "402": "): Event<A>"
          }
        },
        "6": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 404, "column": 31, "offset": 9778},
          "end": {"line": 408, "column": 11, "offset": 9873},
          "context": {
            "404": "declare export function sample<A, B, C>(",
            "405": "  source: Store<A>,",
            "406": "  clock: Store<B>,",
            "407": "  fn: (source: A, clock: B) => C,",
            "408": "): Store<C>"
          }
        },
        "7": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 409, "column": 31, "offset": 9904},
          "end": {"line": 413, "column": 11, "offset": 10021},
          "context": {
            "409": "declare export function sample<A, B, C>(",
            "410": "  source: Event<A> | Effect<A, any, any>,",
            "411": "  clock: Store<B>,",
            "412": "  fn: (source: A, clock: B) => C,",
            "413": "): Event<A>"
          }
        },
        "8": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 414, "column": 31, "offset": 10052},
          "end": {"line": 418, "column": 11, "offset": 10202},
          "context": {
            "414": "declare export function sample<A, B, C>(",
            "415": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "416": "  clock: Event<B> | Effect<B, any, any>,",
            "417": "  fn: (source: A, clock: B) => C,",
            "418": "): Event<C>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 190, "column": 13, "offset": 5303},
        "end": {"line": 190, "column": 20, "offset": 5311},
        "context": {"190": "      clock.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 190, "column": 7, "offset": 5297},
        "end": {"line": 190, "column": 23, "offset": 5314},
        "context": {"190": "      clock.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "clock.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 194, "column": 13, "offset": 5429},
        "end": {"line": 194, "column": 20, "offset": 5437},
        "context": {"194": "      clock.setState(2)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 194, "column": 7, "offset": 5423},
        "end": {"line": 194, "column": 23, "offset": 5440},
        "context": {"194": "      clock.setState(2)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "clock.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 209, "column": 13, "offset": 5866},
        "end": {"line": 209, "column": 20, "offset": 5874},
        "context": {"209": "      clock.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 209, "column": 7, "offset": 5860},
        "end": {"line": 209, "column": 23, "offset": 5877},
        "context": {"209": "      clock.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "clock.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 215, "column": 13, "offset": 6082},
        "end": {"line": 215, "column": 20, "offset": 6090},
        "context": {"215": "      clock.setState(2)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 215, "column": 7, "offset": 6076},
        "end": {"line": 215, "column": 23, "offset": 6093},
        "context": {"215": "      clock.setState(2)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "clock.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 249, "column": 34, "offset": 7012},
        "end": {"line": 253, "column": 7, "offset": 7090},
        "context": {
          "249": "      const hello = createEffect({",
          "250": "        handler() {",
          "251": "          return Promise.resolve(200)",
          "252": "        },",
          "253": "      })"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 249, "column": 34, "offset": 7012},
        "end": {"line": 253, "column": 7, "offset": 7090},
        "context": {
          "249": "      const hello = createEffect({",
          "250": "        handler() {",
          "251": "          return Promise.resolve(200)",
          "252": "        },",
          "253": "      })"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createEffect"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "effectName"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object literal"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
          "type": "SourceFile",
          "start": {"line": 249, "column": 34, "offset": 7012},
          "end": {"line": 253, "column": 7, "offset": 7090},
          "context": {
            "249": "      const hello = createEffect({",
            "250": "        handler() {",
            "251": "          return Promise.resolve(200)",
            "252": "        },",
            "253": "      })"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 299, "column": 16, "offset": 7266},
          "end": {"line": 299, "column": 21, "offset": 7272},
          "context": {"299": "  effectName?: string,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 277, "column": 5, "offset": 7657},
        "end": {"line": 277, "column": 10, "offset": 7663},
        "context": {
          "277": "    sample(hello, run, (a, b) => ({a, b}), greedy).watch(e => {})"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 277, "column": 5, "offset": 7657},
        "end": {"line": 277, "column": 50, "offset": 7703},
        "context": {
          "277": "    sample(hello, run, (a, b) => ({a, b}), greedy).watch(e => {})"
        }
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot call "},
          {"kind": "Code", "text": "sample"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {
              "kind": "Text",
              "text": "Either no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "3",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "4",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "5",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "6",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "7",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "8",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 380, "column": 31, "offset": 9159},
          "end": {"line": 384, "column": 12, "offset": 9248},
          "context": {
            "380": "declare export function sample<A>(config: {|",
            "381": "  +source: Unit<A>,",
            "382": "  +clock: Unit<any>,",
            "383": "  +target?: Unit<A>,",
            "384": "|}): Unit<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 385, "column": 31, "offset": 9279},
          "end": {"line": 390, "column": 12, "offset": 9402},
          "context": {
            "385": "declare export function sample<A, B, C>(config: {|",
            "386": "  +source: Unit<A>,",
            "387": "  +clock: Unit<B>,",
            "389": "  fn(source: A, clock: B): C,",
            "390": "|}): Unit<C>"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 391, "column": 31, "offset": 9433},
          "end": {"line": 394, "column": 11, "offset": 9491},
          "context": {
            "391": "declare export function sample<A>(",
            "392": "  source: Store<A>,",
            "393": "  clock?: Store<any>,",
            "394": "): Store<A>"
          }
        },
        "4": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 395, "column": 31, "offset": 9522},
          "end": {"line": 398, "column": 11, "offset": 9601},
          "context": {
            "395": "declare export function sample<A>(",
            "396": "  source: Event<A> | Effect<A, any, any>,",
            "397": "  clock: Store<any>,",
            "398": "): Event<A>"
          }
        },
        "5": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 399, "column": 31, "offset": 9632},
          "end": {"line": 402, "column": 11, "offset": 9746},
          "context": {
            "399": "declare export function sample<A>(",
            "400": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "401": "  clock: Event<any> | Effect<any, any, any>,",
            "402": "): Event<A>"
          }
        },
        "6": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 404, "column": 31, "offset": 9778},
          "end": {"line": 408, "column": 11, "offset": 9873},
          "context": {
            "404": "declare export function sample<A, B, C>(",
            "405": "  source: Store<A>,",
            "406": "  clock: Store<B>,",
            "407": "  fn: (source: A, clock: B) => C,",
            "408": "): Store<C>"
          }
        },
        "7": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 409, "column": 31, "offset": 9904},
          "end": {"line": 413, "column": 11, "offset": 10021},
          "context": {
            "409": "declare export function sample<A, B, C>(",
            "410": "  source: Event<A> | Effect<A, any, any>,",
            "411": "  clock: Store<B>,",
            "412": "  fn: (source: A, clock: B) => C,",
            "413": "): Event<A>"
          }
        },
        "8": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 414, "column": 31, "offset": 10052},
          "end": {"line": 418, "column": 11, "offset": 10202},
          "context": {
            "414": "declare export function sample<A, B, C>(",
            "415": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "416": "  clock: Event<B> | Effect<B, any, any>,",
            "417": "  fn: (source: A, clock: B) => C,",
            "418": "): Event<C>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 278, "column": 5, "offset": 7723},
        "end": {"line": 278, "column": 10, "offset": 7729},
        "context": {
          "278": "    sample(hello, run, (a, b) => ({a, b}), greedy).watch(e => fn1(e))"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 278, "column": 5, "offset": 7723},
        "end": {"line": 278, "column": 50, "offset": 7769},
        "context": {
          "278": "    sample(hello, run, (a, b) => ({a, b}), greedy).watch(e => fn1(e))"
        }
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot call "},
          {"kind": "Code", "text": "sample"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {
              "kind": "Text",
              "text": "Either no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 1 argument is expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "2",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "3",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "4",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 2 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "5",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "6",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "7",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {
              "kind": "Text",
              "text": "Or no more than 3 arguments are expected by "
            },
            {
              "kind": "Reference",
              "referenceId": "8",
              "message": [{"kind": "Text", "text": "function type"}]
            },
            {"kind": "Text", "text": "."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 380, "column": 31, "offset": 9159},
          "end": {"line": 384, "column": 12, "offset": 9248},
          "context": {
            "380": "declare export function sample<A>(config: {|",
            "381": "  +source: Unit<A>,",
            "382": "  +clock: Unit<any>,",
            "383": "  +target?: Unit<A>,",
            "384": "|}): Unit<A>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 385, "column": 31, "offset": 9279},
          "end": {"line": 390, "column": 12, "offset": 9402},
          "context": {
            "385": "declare export function sample<A, B, C>(config: {|",
            "386": "  +source: Unit<A>,",
            "387": "  +clock: Unit<B>,",
            "389": "  fn(source: A, clock: B): C,",
            "390": "|}): Unit<C>"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 391, "column": 31, "offset": 9433},
          "end": {"line": 394, "column": 11, "offset": 9491},
          "context": {
            "391": "declare export function sample<A>(",
            "392": "  source: Store<A>,",
            "393": "  clock?: Store<any>,",
            "394": "): Store<A>"
          }
        },
        "4": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 395, "column": 31, "offset": 9522},
          "end": {"line": 398, "column": 11, "offset": 9601},
          "context": {
            "395": "declare export function sample<A>(",
            "396": "  source: Event<A> | Effect<A, any, any>,",
            "397": "  clock: Store<any>,",
            "398": "): Event<A>"
          }
        },
        "5": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 399, "column": 31, "offset": 9632},
          "end": {"line": 402, "column": 11, "offset": 9746},
          "context": {
            "399": "declare export function sample<A>(",
            "400": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "401": "  clock: Event<any> | Effect<any, any, any>,",
            "402": "): Event<A>"
          }
        },
        "6": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 404, "column": 31, "offset": 9778},
          "end": {"line": 408, "column": 11, "offset": 9873},
          "context": {
            "404": "declare export function sample<A, B, C>(",
            "405": "  source: Store<A>,",
            "406": "  clock: Store<B>,",
            "407": "  fn: (source: A, clock: B) => C,",
            "408": "): Store<C>"
          }
        },
        "7": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 409, "column": 31, "offset": 9904},
          "end": {"line": 413, "column": 11, "offset": 10021},
          "context": {
            "409": "declare export function sample<A, B, C>(",
            "410": "  source: Event<A> | Effect<A, any, any>,",
            "411": "  clock: Store<B>,",
            "412": "  fn: (source: A, clock: B) => C,",
            "413": "): Event<A>"
          }
        },
        "8": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 414, "column": 31, "offset": 10052},
          "end": {"line": 418, "column": 11, "offset": 10202},
          "context": {
            "414": "declare export function sample<A, B, C>(",
            "415": "  source: Event<A> | Store<A> | Effect<A, any, any>,",
            "416": "  clock: Event<B> | Effect<B, any, any>,",
            "417": "  fn: (source: A, clock: B) => C,",
            "418": "): Event<C>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 317, "column": 10, "offset": 8599},
        "end": {"line": 317, "column": 17, "offset": 8607},
        "context": {"317": "      s1.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 317, "column": 7, "offset": 8596},
        "end": {"line": 317, "column": 20, "offset": 8610},
        "context": {"317": "      s1.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 329, "column": 10, "offset": 8865},
        "end": {"line": 329, "column": 17, "offset": 8873},
        "context": {"329": "      s1.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 329, "column": 7, "offset": 8862},
        "end": {"line": 329, "column": 20, "offset": 8876},
        "context": {"329": "      s1.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 354, "column": 8, "offset": 9491},
        "end": {"line": 354, "column": 15, "offset": 9499},
        "context": {"354": "    s1.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 354, "column": 5, "offset": 9488},
        "end": {"line": 354, "column": 18, "offset": 9502},
        "context": {"354": "    s1.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 360, "column": 8, "offset": 9647},
        "end": {"line": 360, "column": 15, "offset": 9655},
        "context": {"360": "    s1.setState(2)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 360, "column": 5, "offset": 9644},
        "end": {"line": 360, "column": 18, "offset": 9658},
        "context": {"360": "    s1.setState(2)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 370, "column": 8, "offset": 9894},
        "end": {"line": 370, "column": 15, "offset": 9902},
        "context": {"370": "    s1.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 370, "column": 5, "offset": 9891},
        "end": {"line": 370, "column": 18, "offset": 9905},
        "context": {"370": "    s1.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 376, "column": 8, "offset": 10069},
        "end": {"line": 376, "column": 15, "offset": 10077},
        "context": {"376": "    s1.setState(2)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 376, "column": 5, "offset": 10066},
        "end": {"line": 376, "column": 18, "offset": 10080},
        "context": {"376": "    s1.setState(2)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 377, "column": 8, "offset": 10088},
        "end": {"line": 377, "column": 15, "offset": 10096},
        "context": {"377": "    s1.setState(0)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 377, "column": 5, "offset": 10085},
        "end": {"line": 377, "column": 18, "offset": 10099},
        "context": {"377": "    s1.setState(0)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "s1.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 379, "column": 10, "offset": 10110},
        "end": {"line": 379, "column": 17, "offset": 10118},
        "context": {"379": "    stop.setState(true)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/__tests__/sample.test.js",
        "type": "SourceFile",
        "start": {"line": 379, "column": 5, "offset": 10105},
        "end": {"line": 379, "column": 23, "offset": 10124},
        "context": {"379": "    stop.setState(true)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "stop.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/effect/__tests__/di.test.js",
        "type": "SourceFile",
        "start": {"line": 68, "column": 30, "offset": 1656},
        "end": {"line": 68, "column": 33, "offset": 1660},
        "context": {
          "68": "  await expect(effect.create.mock.calls).toMatchSnapshot('effect.create')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/effect/__tests__/di.test.js",
        "type": "SourceFile",
        "start": {"line": 68, "column": 16, "offset": 1642},
        "end": {"line": 68, "column": 33, "offset": 1660},
        "context": {
          "68": "  await expect(effect.create.mock.calls).toMatchSnapshot('effect.create')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "effect.create.mock"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "mock"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "statics of function type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/effect/index.h.js",
          "type": "SourceFile",
          "start": {"line": 73, "column": 3, "offset": 1919},
          "end": {"line": 73, "column": 60, "offset": 1977},
          "context": {
            "73": "  create(payload: Params, type: string, args: any[]): Params,"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/di.test.js",
        "type": "SourceFile",
        "start": {"line": 26, "column": 3, "offset": 655},
        "end": {"line": 26, "column": 12, "offset": 665},
        "context": {"26": "  bar.create = jest.fn((payload, fullName, args) =>"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/di.test.js",
        "type": "SourceFile",
        "start": {"line": 26, "column": 3, "offset": 655},
        "end": {"line": 26, "column": 12, "offset": 665},
        "context": {"26": "  bar.create = jest.fn((payload, fullName, args) =>"}
      },
      "messageMarkup": {
        "kind": "UnorderedList",
        "message": [
          {"kind": "Text", "text": "Cannot assign "},
          {"kind": "Code", "text": "jest.fn(...)"},
          {"kind": "Text", "text": " to "},
          {"kind": "Code", "text": "bar.create"},
          {"kind": "Text", "text": " because:"}
        ],
        "items": [
          [
            {"kind": "Text", "text": "Either property "},
            {"kind": "Code", "text": "create"},
            {"kind": "Text", "text": " is missing in "},
            {
              "kind": "Reference",
              "referenceId": "1",
              "message": [{"kind": "Text", "text": "statics of function type"}]
            },
            {"kind": "Text", "text": "."}
          ],
          [
            {"kind": "Text", "text": "Or property "},
            {"kind": "Code", "text": "create"},
            {"kind": "Text", "text": " is not writable."}
          ]
        ]
      },
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/di.test.js",
          "type": "SourceFile",
          "start": {"line": 24, "column": 22, "offset": 565},
          "end": {"line": 24, "column": 47, "offset": 591},
          "context": {
            "24": "  const bar: FnEvent<(number, string) => number> = createEvent<number>('bar')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 9, "column": 23, "offset": 236},
        "end": {"line": 9, "column": 26, "offset": 240},
        "context": {"9": "  expect(is.event(sub.fail)).toBe(true)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 9, "column": 19, "offset": 232},
        "end": {"line": 9, "column": 26, "offset": 240},
        "context": {"9": "  expect(is.event(sub.fail)).toBe(true)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "sub.fail"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fail"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscription"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 40, "column": 46, "offset": 675},
          "end": {"line": 40, "column": 57, "offset": 687},
          "context": {
            "40": "  watch(watcher: (payload: Payload) => any): Subscription;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 18, "column": 7, "offset": 432},
        "end": {"line": 18, "column": 10, "offset": 436},
        "context": {"18": "  sub.fail.watch(e => fn(e))"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 18, "column": 3, "offset": 428},
        "end": {"line": 18, "column": 10, "offset": 436},
        "context": {"18": "  sub.fail.watch(e => fn(e))"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "sub.fail"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fail"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscription"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 40, "column": 46, "offset": 675},
          "end": {"line": 40, "column": 57, "offset": 687},
          "context": {
            "40": "  watch(watcher: (payload: Payload) => any): Subscription;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 39, "column": 7, "offset": 920},
        "end": {"line": 39, "column": 10, "offset": 924},
        "context": {"39": "  sub.fail.watch(e => {"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 39, "column": 3, "offset": 916},
        "end": {"line": 39, "column": 10, "offset": 924},
        "context": {"39": "  sub.fail.watch(e => {"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "sub.fail"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fail"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscription"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 40, "column": 46, "offset": 675},
          "end": {"line": 40, "column": 57, "offset": 687},
          "context": {
            "40": "  watch(watcher: (payload: Payload) => any): Subscription;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 63, "column": 7, "offset": 1436},
        "end": {"line": 63, "column": 10, "offset": 1440},
        "context": {"63": "  sub.done.watch(e => {"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 63, "column": 3, "offset": 1432},
        "end": {"line": 63, "column": 10, "offset": 1440},
        "context": {"63": "  sub.done.watch(e => {"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "sub.done"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "done"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscription"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 40, "column": 46, "offset": 675},
          "end": {"line": 40, "column": 57, "offset": 687},
          "context": {
            "40": "  watch(watcher: (payload: Payload) => any): Subscription;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filter.test.js",
        "type": "SourceFile",
        "start": {"line": 68, "column": 21, "offset": 1619},
        "end": {"line": 68, "column": 28, "offset": 1627},
        "context": {
          "68": "    expect(show(num.graphite)).toMatchSnapshot('num event graph')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filter.test.js",
        "type": "SourceFile",
        "start": {"line": 68, "column": 17, "offset": 1615},
        "end": {"line": 68, "column": 28, "offset": 1627},
        "context": {
          "68": "    expect(show(num.graphite)).toMatchSnapshot('num event graph')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "num.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filter.test.js",
          "type": "SourceFile",
          "start": {"line": 53, "column": 16, "offset": 1339},
          "end": {"line": 53, "column": 28, "offset": 1352},
          "context": {
            "53": "    const num: Event<number> = createEvent('number')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filter.test.js",
        "type": "SourceFile",
        "start": {"line": 69, "column": 25, "offset": 1689},
        "end": {"line": 69, "column": 32, "offset": 1697},
        "context": {
          "69": "    expect(show(evenNum.graphite)).toMatchSnapshot('evenNum event graph')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filter.test.js",
        "type": "SourceFile",
        "start": {"line": 69, "column": 17, "offset": 1681},
        "end": {"line": 69, "column": 32, "offset": 1697},
        "context": {
          "69": "    expect(show(evenNum.graphite)).toMatchSnapshot('evenNum event graph')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "evenNum.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 48, "column": 50, "offset": 951},
          "end": {"line": 48, "column": 57, "offset": 959},
          "context": {
            "48": "  filter<T>(fn: (payload: Payload) => T | void): Event<T>;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filterMap.test.js",
        "type": "SourceFile",
        "start": {"line": 43, "column": 21, "offset": 964},
        "end": {"line": 43, "column": 28, "offset": 972},
        "context": {
          "43": "    expect(show(num.graphite)).toMatchSnapshot('num event graph')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filterMap.test.js",
        "type": "SourceFile",
        "start": {"line": 43, "column": 17, "offset": 960},
        "end": {"line": 43, "column": 28, "offset": 972},
        "context": {
          "43": "    expect(show(num.graphite)).toMatchSnapshot('num event graph')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "num.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filterMap.test.js",
          "type": "SourceFile",
          "start": {"line": 28, "column": 16, "offset": 681},
          "end": {"line": 28, "column": 28, "offset": 694},
          "context": {
            "28": "    const num: Event<number> = createEvent('number')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filterMap.test.js",
        "type": "SourceFile",
        "start": {"line": 44, "column": 25, "offset": 1034},
        "end": {"line": 44, "column": 32, "offset": 1042},
        "context": {
          "44": "    expect(show(evenNum.graphite)).toMatchSnapshot('evenNum event graph')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/__tests__/filterMap.test.js",
        "type": "SourceFile",
        "start": {"line": 44, "column": 17, "offset": 1026},
        "end": {"line": 44, "column": 32, "offset": 1042},
        "context": {
          "44": "    expect(show(evenNum.graphite)).toMatchSnapshot('evenNum event graph')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "evenNum.graphite"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "graphite"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Event"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 49, "column": 53, "offset": 1013},
          "end": {"line": 49, "column": 60, "offset": 1021},
          "context": {
            "49": "  filterMap<T>(fn: (payload: Payload) => T | void): Event<T>;"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/eventFabric.js",
        "type": "SourceFile",
        "start": {"line": 216, "column": 48, "offset": 5067},
        "end": {"line": 216, "column": 52, "offset": 5072},
        "context": {
          "216": "        return watcher(payload, getDisplayName(event))"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/eventFabric.js",
        "type": "SourceFile",
        "start": {"line": 216, "column": 48, "offset": 5067},
        "end": {"line": 216, "column": 52, "offset": 5072},
        "context": {
          "216": "        return watcher(payload, getDisplayName(event))"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "getDisplayName"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "event"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "unit"},
        {"kind": "Text", "text": " because inexact "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " is incompatible with exact "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "CompositeName"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " in property "},
        {"kind": "Code", "text": "compositeName"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/naming.js",
          "type": "SourceFile",
          "start": {"line": 10, "column": 19, "offset": 255},
          "end": {"line": 10, "column": 31, "offset": 268},
          "context": {"10": "  compositeName?: CompositeName,"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/index.h.js",
          "type": "SourceFile",
          "start": {"line": 26, "column": 18, "offset": 875},
          "end": {"line": 26, "column": 30, "offset": 888},
          "context": {"26": "  compositeName: CompositeName,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/sample_local.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 3, "offset": 152},
        "end": {"line": 7, "column": 13, "offset": 163},
        "context": {"7": "  createGraph,"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot import "},
        {"kind": "Code", "text": "createGraph"},
        {"kind": "Text", "text": " because there is no "},
        {"kind": "Code", "text": "createGraph"},
        {"kind": "Text", "text": " export in "},
        {"kind": "Code", "text": "effector/stdlib"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 20, "column": 9, "offset": 482},
        "end": {"line": 20, "column": 16, "offset": 490},
        "context": {"20": "  store.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 20, "column": 3, "offset": 476},
        "end": {"line": 20, "column": 19, "offset": 493},
        "context": {"20": "  store.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "store.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 40, "column": 7, "offset": 949},
        "end": {"line": 40, "column": 10, "offset": 953},
        "context": {"40": "  sub.fail.watch(e => fn(e))"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 40, "column": 3, "offset": 945},
        "end": {"line": 40, "column": 10, "offset": 953},
        "context": {"40": "  sub.fail.watch(e => fn(e))"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "sub.fail"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fail"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Subscription"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 109, "column": 6, "offset": 2736},
          "end": {"line": 109, "column": 17, "offset": 2748},
          "context": {"109": "  ): Subscription;"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 43, "column": 9, "offset": 1011},
        "end": {"line": 43, "column": 16, "offset": 1019},
        "context": {"43": "  store.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 43, "column": 3, "offset": 1005},
        "end": {"line": 43, "column": 19, "offset": 1022},
        "context": {"43": "  store.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "store.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 64, "column": 9, "offset": 1506},
        "end": {"line": 64, "column": 16, "offset": 1514},
        "context": {"64": "  store.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 64, "column": 3, "offset": 1500},
        "end": {"line": 64, "column": 19, "offset": 1517},
        "context": {"64": "  store.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "store.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 66, "column": 9, "offset": 1556},
        "end": {"line": 66, "column": 16, "offset": 1564},
        "context": {"66": "  store.setState(6)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 66, "column": 3, "offset": 1550},
        "end": {"line": 66, "column": 19, "offset": 1567},
        "context": {"66": "  store.setState(6)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "store.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 230, "column": 11, "offset": 5441},
        "end": {"line": 230, "column": 18, "offset": 5449},
        "context": {"230": "      foo.setState(err.state)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/fail.test.js",
        "type": "SourceFile",
        "start": {"line": 230, "column": 7, "offset": 5437},
        "end": {"line": 230, "column": 29, "offset": 5460},
        "context": {"230": "      foo.setState(err.state)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "foo.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/updates.test.js",
        "type": "SourceFile",
        "start": {"line": 19, "column": 9, "offset": 431},
        "end": {"line": 19, "column": 16, "offset": 439},
        "context": {"19": "  store.setState(1)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/updates.test.js",
        "type": "SourceFile",
        "start": {"line": 19, "column": 3, "offset": 425},
        "end": {"line": 19, "column": 19, "offset": 442},
        "context": {"19": "  store.setState(1)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "store.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/updates.test.js",
        "type": "SourceFile",
        "start": {"line": 21, "column": 9, "offset": 483},
        "end": {"line": 21, "column": 16, "offset": 491},
        "context": {
          "21": "  store.setState(1) // state will not change, as store.getState() === 1"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/__tests__/updates.test.js",
        "type": "SourceFile",
        "start": {"line": 21, "column": 3, "offset": 477},
        "end": {"line": 21, "column": 19, "offset": 494},
        "context": {
          "21": "  store.setState(1) // state will not change, as store.getState() === 1"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "store.setState"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "setState"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Store"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 309, "column": 4, "offset": 7490},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {"309": "): Store<State>"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/createStoreObject.js",
        "type": "SourceFile",
        "start": {"line": 69, "column": 23, "offset": 1684},
        "end": {"line": 81, "column": 5, "offset": 1943},
        "context": {
          "69": "    createLink(child, {",
          "70": "      scope: {key, clone, target: store.stateRef, isFresh},",
          "71": "      node,",
          "80": "      },",
          "81": "    })"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/createStoreObject.js",
        "type": "SourceFile",
        "start": {"line": 69, "column": 23, "offset": 1684},
        "end": {"line": 81, "column": 5, "offset": 1943},
        "context": {
          "69": "    createLink(child, {",
          "70": "      scope: {key, clone, target: store.stateRef, isFresh},",
          "71": "      node,",
          "80": "      },",
          "81": "    })"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createLink"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "opts"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "family"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object literal"}]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/store/createStoreObject.js",
          "type": "SourceFile",
          "start": {"line": 69, "column": 23, "offset": 1684},
          "end": {"line": 81, "column": 5, "offset": 1943},
          "context": {
            "69": "    createLink(child, {",
            "70": "      scope: {key, clone, target: store.stateRef, isFresh},",
            "71": "      node,",
            "80": "      },",
            "81": "    })"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/event/forward.js",
          "type": "SourceFile",
          "start": {"line": 8, "column": 9, "offset": 221},
          "end": {"line": 18, "column": 4, "offset": 471},
          "context": {
            "8": "  opts: {|",
            "9": "    +node: Array<Cmd>,",
            "10": "    +child?: Array<Graphite>,",
            "17": "    },",
            "18": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 50, "column": 24, "offset": 1415},
        "end": {"line": 50, "column": 25, "offset": 1417},
        "context": {"50": ").graphite.seq[2].data.fn.toString()"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 48, "column": 33, "offset": 1371},
        "end": {"line": 50, "column": 25, "offset": 1417},
        "context": {
          "48": "const storeOldStateComparator = createStore(",
          "49": "  null,",
          "50": ").graphite.seq[2].data.fn.toString()"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "createStore(...).graphite.seq[2].data.fn"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fn"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/stdlib/index.h.js",
          "type": "SourceFile",
          "start": {"line": 40, "column": 10, "offset": 534},
          "end": {"line": 44, "column": 4, "offset": 620},
          "context": {
            "40": "  +data: {|",
            "41": "    +barrierID: ID,",
            "42": "    +priority: 'barrier' | 'sampler',",
            "43": "    meta?: NodeMeta,",
            "44": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 50, "column": 24, "offset": 1415},
        "end": {"line": 50, "column": 25, "offset": 1417},
        "context": {"50": ").graphite.seq[2].data.fn.toString()"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 48, "column": 33, "offset": 1371},
        "end": {"line": 50, "column": 25, "offset": 1417},
        "context": {
          "48": "const storeOldStateComparator = createStore(",
          "49": "  null,",
          "50": ").graphite.seq[2].data.fn.toString()"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "createStore(...).graphite.seq[2].data.fn"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fn"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/stdlib/index.h.js",
          "type": "SourceFile",
          "start": {"line": 51, "column": 10, "offset": 706},
          "end": {"line": 54, "column": 4, "offset": 755},
          "context": {
            "51": "  +data: {|",
            "52": "    store: StateRef,",
            "53": "    meta?: NodeMeta,",
            "54": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 50, "column": 24, "offset": 1415},
        "end": {"line": 50, "column": 25, "offset": 1417},
        "context": {"50": ").graphite.seq[2].data.fn.toString()"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 48, "column": 33, "offset": 1371},
        "end": {"line": 50, "column": 25, "offset": 1417},
        "context": {
          "48": "const storeOldStateComparator = createStore(",
          "49": "  null,",
          "50": ").graphite.seq[2].data.fn.toString()"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "createStore(...).graphite.seq[2].data.fn"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fn"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/stdlib/index.h.js",
          "type": "SourceFile",
          "start": {"line": 79, "column": 10, "offset": 1175},
          "end": {"line": 82, "column": 4, "offset": 1225},
          "context": {
            "79": "  +data: {|",
            "80": "    fullName: string,",
            "81": "    meta?: NodeMeta,",
            "82": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 51, "column": 63, "offset": 1491},
        "end": {"line": 51, "column": 64, "offset": 1493},
        "context": {
          "51": "const isNotUndefined = createStore(null).graphite.seq[0].data.fn.toString()"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 51, "column": 24, "offset": 1452},
        "end": {"line": 51, "column": 64, "offset": 1493},
        "context": {
          "51": "const isNotUndefined = createStore(null).graphite.seq[0].data.fn.toString()"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "createStore(...).graphite.seq[0].data.fn"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fn"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/stdlib/index.h.js",
          "type": "SourceFile",
          "start": {"line": 40, "column": 10, "offset": 534},
          "end": {"line": 44, "column": 4, "offset": 620},
          "context": {
            "40": "  +data: {|",
            "41": "    +barrierID: ID,",
            "42": "    +priority: 'barrier' | 'sampler',",
            "43": "    meta?: NodeMeta,",
            "44": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 51, "column": 63, "offset": 1491},
        "end": {"line": 51, "column": 64, "offset": 1493},
        "context": {
          "51": "const isNotUndefined = createStore(null).graphite.seq[0].data.fn.toString()"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 51, "column": 24, "offset": 1452},
        "end": {"line": 51, "column": 64, "offset": 1493},
        "context": {
          "51": "const isNotUndefined = createStore(null).graphite.seq[0].data.fn.toString()"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "createStore(...).graphite.seq[0].data.fn"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fn"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/stdlib/index.h.js",
          "type": "SourceFile",
          "start": {"line": 51, "column": 10, "offset": 706},
          "end": {"line": 54, "column": 4, "offset": 755},
          "context": {
            "51": "  +data: {|",
            "52": "    store: StateRef,",
            "53": "    meta?: NodeMeta,",
            "54": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 51, "column": 63, "offset": 1491},
        "end": {"line": 51, "column": 64, "offset": 1493},
        "context": {
          "51": "const isNotUndefined = createStore(null).graphite.seq[0].data.fn.toString()"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/showstep.js",
        "type": "SourceFile",
        "start": {"line": 51, "column": 24, "offset": 1452},
        "end": {"line": 51, "column": 64, "offset": 1493},
        "context": {
          "51": "const isNotUndefined = createStore(null).graphite.seq[0].data.fn.toString()"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "createStore(...).graphite.seq[0].data.fn"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "fn"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/effector/stdlib/index.h.js",
          "type": "SourceFile",
          "start": {"line": 79, "column": 10, "offset": 1175},
          "end": {"line": 82, "column": 4, "offset": 1225},
          "context": {
            "79": "  +data: {|",
            "80": "    fullName: string,",
            "81": "    meta?: NodeMeta,",
            "82": "  |},"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/testUtils.js",
        "type": "SourceFile",
        "start": {"line": 19, "column": 16, "offset": 473},
        "end": {"line": 19, "column": 24, "offset": 482},
        "context": {"19": "const mockFN = jest.fn()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "TArguments"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "TArguments"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of method "},
            {"kind": "Code", "text": "fn"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/jest.js",
          "type": "LibFile",
          "start": {"line": 805, "column": 3, "offset": 23273},
          "end": {"line": 807, "column": 36, "offset": 23408},
          "context": {
            "805": "  fn<TArguments: $ReadOnlyArray<*>, TReturn>(",
            "806": "    implementation?: (...args: TArguments) => TReturn,",
            "807": "  ): JestMockFn<TArguments, TReturn>,"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/testUtils.js",
          "type": "SourceFile",
          "start": {"line": 19, "column": 16, "offset": 473},
          "end": {"line": 19, "column": 24, "offset": 482},
          "context": {"19": "const mockFN = jest.fn()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/testUtils.js",
        "type": "SourceFile",
        "start": {"line": 19, "column": 16, "offset": 473},
        "end": {"line": 19, "column": 24, "offset": 482},
        "context": {"19": "const mockFN = jest.fn()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "TReturn"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "TReturn"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of method "},
            {"kind": "Code", "text": "fn"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/flow-typed/jest.js",
          "type": "LibFile",
          "start": {"line": 805, "column": 3, "offset": 23273},
          "end": {"line": 807, "column": 36, "offset": 23408},
          "context": {
            "805": "  fn<TArguments: $ReadOnlyArray<*>, TReturn>(",
            "806": "    implementation?: (...args: TArguments) => TReturn,",
            "807": "  ): JestMockFn<TArguments, TReturn>,"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/fixtures/testUtils.js",
          "type": "SourceFile",
          "start": {"line": 19, "column": 16, "offset": 473},
          "end": {"line": 19, "column": 24, "offset": 482},
          "context": {"19": "const mockFN = jest.fn()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/flow-infer/dynamic.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 22, "offset": 78},
        "end": {"line": 4, "column": 30, "offset": 87},
        "context": {"4": "import {AppBar} from 'react95'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "react95"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/flow-infer/dynamic.js",
        "type": "SourceFile",
        "start": {"line": 12, "column": 51, "offset": 296},
        "end": {"line": 12, "column": 52, "offset": 298},
        "context": {
          "12": "  multiply: (count, mp: number | void) => count * mp,"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {
          "kind": "Text",
          "text": "Cannot perform arithmetic operation because "
        },
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " is not a number."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/flow-infer/dynamic.js",
          "type": "SourceFile",
          "start": {"line": 12, "column": 34, "offset": 279},
          "end": {"line": 12, "column": 37, "offset": 283},
          "context": {
            "12": "  multiply: (count, mp: number | void) => count * mp,"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/forms/index.js",
        "type": "SourceFile",
        "start": {"line": 185, "column": 10, "offset": 5057},
        "end": {"line": 185, "column": 13, "offset": 5061},
        "context": {"185": "  return form"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/forms/index.js",
        "type": "SourceFile",
        "start": {"line": 185, "column": 10, "offset": 5057},
        "end": {"line": 185, "column": 13, "offset": 5061},
        "context": {"185": "  return form"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot return "},
        {"kind": "Code", "text": "form"},
        {"kind": "Text", "text": " because inexact "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object literal"}]
        },
        {"kind": "Text", "text": " is incompatible with exact "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "FormApi"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/forms/index.js",
          "type": "SourceFile",
          "start": {"line": 102, "column": 16, "offset": 2730},
          "end": {"line": 102, "column": 17, "offset": 2732},
          "context": {"102": "  const form = {}"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/forms/index.js",
          "type": "SourceFile",
          "start": {"line": 99, "column": 5, "offset": 2652},
          "end": {"line": 99, "column": 25, "offset": 2673},
          "context": {"99": "}): FormApi<Form, Errors> {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/model-gen/generate.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 24, "offset": 33},
        "end": {"line": 3, "column": 31, "offset": 41},
        "context": {"3": "const recast = require('recast')"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "recast"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/model-gen/generate.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 27, "offset": 69},
        "end": {"line": 4, "column": 37, "offset": 80},
        "context": {"4": "const camelCase = require('camelcase')"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "camelcase"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/model-gen/generate.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 53, "offset": 134},
        "end": {"line": 5, "column": 63, "offset": 145},
        "context": {
          "5": "const {visit, namedTypes: n, builders: b} = require('ast-types')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "ast-types"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/model-gen/generate.js",
        "type": "SourceFile",
        "start": {"line": 10, "column": 19, "offset": 280},
        "end": {"line": 10, "column": 39, "offset": 301},
        "context": {"10": "  parser: require('recast/parsers/flow'),"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "recast/parsers/flow"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/applicative.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 21, "offset": 29},
        "end": {"line": 3, "column": 30, "offset": 39},
        "context": {"3": "import * as jv from 'jsverify'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "jsverify"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/applicative.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 31, "offset": 70},
        "end": {"line": 4, "column": 39, "offset": 79},
        "context": {"4": "import {HK, Applicative} from 'funland'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/applicative.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 38, "offset": 117},
        "end": {"line": 5, "column": 51, "offset": 131},
        "context": {"5": "import {Equiv, ApplicativeLaws} from 'funland-laws'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland-laws"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/apply.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 21, "offset": 29},
        "end": {"line": 3, "column": 30, "offset": 39},
        "context": {"3": "import * as jv from 'jsverify'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "jsverify"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/apply.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 25, "offset": 64},
        "end": {"line": 4, "column": 33, "offset": 73},
        "context": {"4": "import {HK, Apply} from 'funland'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/apply.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 32, "offset": 105},
        "end": {"line": 5, "column": 45, "offset": 119},
        "context": {"5": "import {Equiv, ApplyLaws} from 'funland-laws'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland-laws"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/functor.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 21, "offset": 29},
        "end": {"line": 3, "column": 30, "offset": 39},
        "context": {"3": "import * as jv from 'jsverify'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "jsverify"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/functor.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 27, "offset": 66},
        "end": {"line": 4, "column": 35, "offset": 75},
        "context": {"4": "import {HK, Functor} from 'funland'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/common/functor.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 34, "offset": 109},
        "end": {"line": 5, "column": 47, "offset": 123},
        "context": {"5": "import {Equiv, FunctorLaws} from 'funland-laws'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland-laws"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/laws/contravariant.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 18, "offset": 26},
        "end": {"line": 3, "column": 26, "offset": 35},
        "context": {"3": "import {HK} from 'funland'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/laws/contravariant.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 21, "offset": 56},
        "end": {"line": 4, "column": 34, "offset": 70},
        "context": {"4": "import {Equiv} from 'funland-laws'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland-laws"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/laws/filterable.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 18, "offset": 26},
        "end": {"line": 3, "column": 26, "offset": 35},
        "context": {"3": "import {HK} from 'funland'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/laws/filterable.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 21, "offset": 56},
        "end": {"line": 4, "column": 34, "offset": 70},
        "context": {"4": "import {Equiv} from 'funland-laws'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "funland-laws"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/static-land/__tests__/store.test.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 21, "offset": 29},
        "end": {"line": 3, "column": 30, "offset": 39},
        "context": {"3": "import * as jv from 'jsverify'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "jsverify"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 39, "column": 47, "offset": 785},
        "end": {"line": 39, "column": 47, "offset": 786},
        "context": {"39": "      const sample_ee_check2: Event<string> = c"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 39, "column": 47, "offset": 785},
        "end": {"line": 39, "column": 47, "offset": 786},
        "context": {"39": "      const sample_ee_check2: Event<string> = c"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "c"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_ee_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 34, "column": 29, "offset": 612},
          "end": {"line": 34, "column": 34, "offset": 618},
          "context": {"34": "      const a = createEvent<number>()"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 39, "column": 37, "offset": 775},
          "end": {"line": 39, "column": 42, "offset": 781},
          "context": {"39": "      const sample_ee_check2: Event<string> = c"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 47, "column": 48, "offset": 1082},
        "end": {"line": 47, "column": 48, "offset": 1083},
        "context": {"47": "      const sample_eeh_check2: Event<string> = c"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 47, "column": 48, "offset": 1082},
        "end": {"line": 47, "column": 48, "offset": 1083},
        "context": {"47": "      const sample_eeh_check2: Event<string> = c"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "c"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_eeh_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 46, "column": 38, "offset": 1006},
          "end": {"line": 46, "column": 60, "offset": 1029},
          "context": {
            "46": "      const sample_eeh_check1: Event<{a: string, b: boolean}> = c"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 47, "column": 38, "offset": 1072},
          "end": {"line": 47, "column": 43, "offset": 1078},
          "context": {"47": "      const sample_eeh_check2: Event<string> = c"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 56, "column": 47, "offset": 1321},
        "end": {"line": 56, "column": 47, "offset": 1322},
        "context": {"56": "      const sample_se_check2: Event<string> = e"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 56, "column": 47, "offset": 1321},
        "end": {"line": 56, "column": 47, "offset": 1322},
        "context": {"56": "      const sample_se_check2: Event<string> = e"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "e"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_se_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 55, "column": 37, "offset": 1263},
          "end": {"line": 55, "column": 42, "offset": 1269},
          "context": {"55": "      const sample_se_check1: Event<number> = e"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 56, "column": 37, "offset": 1311},
          "end": {"line": 56, "column": 42, "offset": 1317},
          "context": {"56": "      const sample_se_check2: Event<string> = e"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 64, "column": 48, "offset": 1612},
        "end": {"line": 64, "column": 48, "offset": 1613},
        "context": {"64": "      const sample_seh_check2: Event<string> = e"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 64, "column": 48, "offset": 1612},
        "end": {"line": 64, "column": 48, "offset": 1613},
        "context": {"64": "      const sample_seh_check2: Event<string> = e"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "e"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_seh_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 63, "column": 38, "offset": 1536},
          "end": {"line": 63, "column": 60, "offset": 1559},
          "context": {
            "63": "      const sample_seh_check1: Event<{a: string, b: boolean}> = e"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 64, "column": 38, "offset": 1602},
          "end": {"line": 64, "column": 43, "offset": 1608},
          "context": {"64": "      const sample_seh_check2: Event<string> = e"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 73, "column": 48, "offset": 1872},
        "end": {"line": 73, "column": 48, "offset": 1873},
        "context": {"73": "      const sample_efe_check2: Event<number> = g"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 73, "column": 48, "offset": 1872},
        "end": {"line": 73, "column": 48, "offset": 1873},
        "context": {"73": "      const sample_efe_check2: Event<number> = g"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "g"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_efe_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 68, "column": 30, "offset": 1687},
          "end": {"line": 68, "column": 35, "offset": 1693},
          "context": {"68": "      const f = createEffect<string, any, any>()"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 73, "column": 38, "offset": 1862},
          "end": {"line": 73, "column": 43, "offset": 1868},
          "context": {"73": "      const sample_efe_check2: Event<number> = g"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 81, "column": 49, "offset": 2183},
        "end": {"line": 81, "column": 49, "offset": 2184},
        "context": {"81": "      const sample_efeh_check2: Event<number> = g"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 81, "column": 49, "offset": 2183},
        "end": {"line": 81, "column": 49, "offset": 2184},
        "context": {"81": "      const sample_efeh_check2: Event<number> = g"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "g"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_efeh_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 80, "column": 39, "offset": 2106},
          "end": {"line": 80, "column": 61, "offset": 2129},
          "context": {
            "80": "      const sample_efeh_check1: Event<{a: string, b: boolean}> = g"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 81, "column": 39, "offset": 2173},
          "end": {"line": 81, "column": 44, "offset": 2179},
          "context": {"81": "      const sample_efeh_check2: Event<number> = g"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 90, "column": 47, "offset": 2419},
        "end": {"line": 90, "column": 47, "offset": 2420},
        "context": {"90": "      const sample_ss_check2: Store<string> = c"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 90, "column": 47, "offset": 2419},
        "end": {"line": 90, "column": 47, "offset": 2420},
        "context": {"90": "      const sample_ss_check2: Store<string> = c"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "c"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_ss_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "boolean"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "State"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 89, "column": 37, "offset": 2360},
          "end": {"line": 89, "column": 43, "offset": 2367},
          "context": {"89": "      const sample_ss_check1: Store<boolean> = c"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 90, "column": 37, "offset": 2409},
          "end": {"line": 90, "column": 42, "offset": 2415},
          "context": {"90": "      const sample_ss_check2: Store<string> = c"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 89, "column": 28, "offset": 2119},
          "end": {"line": 89, "column": 32, "offset": 2124},
          "context": {
            "89": "declare export class Store<State> implements Unit<State> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 98, "column": 48, "offset": 2705},
        "end": {"line": 98, "column": 48, "offset": 2706},
        "context": {"98": "      const sample_ssh_check2: Store<string> = c"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 98, "column": 48, "offset": 2705},
        "end": {"line": 98, "column": 48, "offset": 2706},
        "context": {"98": "      const sample_ssh_check2: Store<string> = c"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "c"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_ssh_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "State"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 97, "column": 38, "offset": 2629},
          "end": {"line": 97, "column": 60, "offset": 2652},
          "context": {
            "97": "      const sample_ssh_check1: Store<{a: string, b: boolean}> = c"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 98, "column": 38, "offset": 2695},
          "end": {"line": 98, "column": 43, "offset": 2701},
          "context": {"98": "      const sample_ssh_check2: Store<string> = c"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 89, "column": 28, "offset": 2119},
          "end": {"line": 89, "column": 32, "offset": 2124},
          "context": {
            "89": "declare export class Store<State> implements Unit<State> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 107, "column": 51, "offset": 3021},
        "end": {"line": 107, "column": 59, "offset": 3030},
        "context": {
          "107": "        const sample_s_incorrect: Store<number> = sample(a)"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 107, "column": 51, "offset": 3021},
        "end": {"line": 107, "column": 59, "offset": 3030},
        "context": {
          "107": "        const sample_s_incorrect: Store<number> = sample(a)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "sample(...)"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_s_incorrect"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "State"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 106, "column": 31, "offset": 2967},
          "end": {"line": 106, "column": 32, "offset": 2969},
          "context": {"106": "        const a = createStore('')"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 107, "column": 41, "offset": 3011},
          "end": {"line": 107, "column": 46, "offset": 3017},
          "context": {
            "107": "        const sample_s_incorrect: Store<number> = sample(a)"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 89, "column": 28, "offset": 2119},
          "end": {"line": 89, "column": 32, "offset": 2124},
          "context": {
            "89": "declare export class Store<State> implements Unit<State> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 118, "column": 58, "offset": 3440},
        "end": {"line": 118, "column": 73, "offset": 3456},
        "context": {
          "118": "          const sample_s_edge_incorrect: Event<number> = sample(a, clock)"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 118, "column": 58, "offset": 3440},
        "end": {"line": 118, "column": 73, "offset": 3456},
        "context": {
          "118": "          const sample_s_edge_incorrect: Event<number> = sample(a, clock)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "sample(...)"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "sample_s_edge_incorrect"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 116, "column": 33, "offset": 3341},
          "end": {"line": 116, "column": 34, "offset": 3343},
          "context": {"116": "          const a = createStore('')"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 118, "column": 48, "offset": 3430},
          "end": {"line": 118, "column": 53, "offset": 3436},
          "context": {
            "118": "          const sample_s_edge_incorrect: Event<number> = sample(a, clock)"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 134, "column": 45, "offset": 3818},
        "end": {"line": 134, "column": 52, "offset": 3826},
        "context": {
          "134": "    const event_map_check2: Event<number> = computed"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 134, "column": 45, "offset": 3818},
        "end": {"line": 134, "column": 52, "offset": 3826},
        "context": {
          "134": "    const event_map_check2: Event<number> = computed"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "computed"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "event_map_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 131, "column": 38, "offset": 3721},
          "end": {"line": 131, "column": 42, "offset": 3726},
          "context": {"131": "    const computed = event.map(() => 'foo')"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 134, "column": 35, "offset": 3808},
          "end": {"line": 134, "column": 40, "offset": 3814},
          "context": {
            "134": "    const event_map_check2: Event<number> = computed"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 134, "column": 45, "offset": 3818},
        "end": {"line": 134, "column": 52, "offset": 3826},
        "context": {
          "134": "    const event_map_check2: Event<number> = computed"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 134, "column": 45, "offset": 3818},
        "end": {"line": 134, "column": 52, "offset": 3826},
        "context": {
          "134": "    const event_map_check2: Event<number> = computed"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "computed"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "event_map_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 136, "column": 14, "offset": 3853},
          "end": {"line": 136, "column": 15, "offset": 3855},
          "context": {"136": "    computed('')"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 134, "column": 35, "offset": 3808},
          "end": {"line": 134, "column": 40, "offset": 3814},
          "context": {
            "134": "    const event_map_check2: Event<number> = computed"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 163, "column": 27, "offset": 4574},
        "end": {"line": 163, "column": 38, "offset": 4586},
        "context": {"163": "        if (n % 2) return n.toString()"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 162, "column": 50, "offset": 4528},
        "end": {"line": 164, "column": 8, "offset": 4595},
        "context": {
          "162": "      const filteredEvent_error: Event<number> = event.filter(n => {",
          "163": "        if (n % 2) return n.toString()",
          "164": "      })"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "event.filter(...)"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "filteredEvent_error"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/core.js",
          "type": "LibFile",
          "start": {"line": 158, "column": 31, "offset": 5564},
          "end": {"line": 158, "column": 36, "offset": 5570},
          "context": {"158": "    toString(radix?: number): string;"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 162, "column": 40, "offset": 4518},
          "end": {"line": 162, "column": 45, "offset": 4524},
          "context": {
            "162": "      const filteredEvent_error: Event<number> = event.filter(n => {"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 206, "column": 59, "offset": 5642},
        "end": {"line": 206, "column": 59, "offset": 5643},
        "context": {
          "206": "    const createStore_store2: Store<string> = createStore(0)"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 206, "column": 47, "offset": 5630},
        "end": {"line": 206, "column": 60, "offset": 5644},
        "context": {
          "206": "    const createStore_store2: Store<string> = createStore(0)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "createStore(...)"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "createStore_store2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "State"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 206, "column": 59, "offset": 5642},
          "end": {"line": 206, "column": 59, "offset": 5643},
          "context": {
            "206": "    const createStore_store2: Store<string> = createStore(0)"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 206, "column": 37, "offset": 5620},
          "end": {"line": 206, "column": 42, "offset": 5626},
          "context": {
            "206": "    const createStore_store2: Store<string> = createStore(0)"
          }
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 89, "column": 28, "offset": 2119},
          "end": {"line": 89, "column": 32, "offset": 2124},
          "context": {
            "89": "declare export class Store<State> implements Unit<State> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 229, "column": 47, "offset": 6253},
        "end": {"line": 229, "column": 51, "offset": 6258},
        "context": {
          "229": "      const createApi_check2: Event<string> = event"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 229, "column": 47, "offset": 6253},
        "end": {"line": 229, "column": 51, "offset": 6258},
        "context": {
          "229": "      const createApi_check2: Event<string> = event"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "event"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "createApi_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 229, "column": 37, "offset": 6243},
          "end": {"line": 229, "column": 42, "offset": 6249},
          "context": {
            "229": "      const createApi_check2: Event<string> = event"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 227, "column": 23, "offset": 6184},
          "end": {"line": 227, "column": 28, "offset": 6190},
          "context": {"227": "        event: (n, x: number) => x,"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 37, "column": 28, "offset": 548},
          "end": {"line": 37, "column": 34, "offset": 555},
          "context": {
            "37": "declare export class Event<Payload> implements Unit<Payload> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 233, "column": 26, "offset": 6337},
        "end": {"line": 233, "column": 26, "offset": 6338},
        "context": {"233": "        event: (n, x) => x,"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 232, "column": 40, "offset": 6310},
        "end": {"line": 234, "column": 7, "offset": 6347},
        "context": {
          "232": "      const {event} = createApi(store, {",
          "233": "        event: (n, x) => x,",
          "234": "      })"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createApi"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "api"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in the return value of property "},
        {"kind": "Code", "text": "event"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 235, "column": 37, "offset": 6385},
          "end": {"line": 235, "column": 42, "offset": 6391},
          "context": {
            "235": "      const createApi_check3: Event<string> = event"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 218, "column": 24, "offset": 5940},
          "end": {"line": 218, "column": 29, "offset": 5946},
          "context": {"218": "    const store: Store<number> = createStore(0)"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 292, "column": 39, "offset": 8016},
        "end": {"line": 292, "column": 46, "offset": 8024},
        "context": {"292": "    const map_check2: Store<number> = computed"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 292, "column": 39, "offset": 8016},
        "end": {"line": 292, "column": 46, "offset": 8024},
        "context": {"292": "    const map_check2: Store<number> = computed"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "computed"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "map_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " in type argument "},
        {
          "kind": "Reference",
          "referenceId": "3",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "State"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 290, "column": 29, "offset": 7958},
          "end": {"line": 290, "column": 34, "offset": 7964},
          "context": {"290": "    const map_check1: Store<string> = computed"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 292, "column": 29, "offset": 8006},
          "end": {"line": 292, "column": 34, "offset": 8012},
          "context": {"292": "    const map_check2: Store<number> = computed"}
        },
        "3": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 89, "column": 28, "offset": 2119},
          "end": {"line": 89, "column": 32, "offset": 2124},
          "context": {
            "89": "declare export class Store<State> implements Unit<State> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 374, "column": 34, "offset": 10302},
        "end": {"line": 374, "column": 36, "offset": 10305},
        "context": {"374": "    const domain3 = createDomain(234)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 374, "column": 34, "offset": 10302},
        "end": {"line": 374, "column": 36, "offset": 10305},
        "context": {"374": "    const domain3 = createDomain(234)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createDomain"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "234"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "domainName"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 374, "column": 34, "offset": 10302},
          "end": {"line": 374, "column": 36, "offset": 10305},
          "context": {"374": "    const domain3 = createDomain(234)"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 378, "column": 51, "offset": 9112},
          "end": {"line": 378, "column": 56, "offset": 9118},
          "context": {
            "378": "declare export function createDomain(domainName?: string): Domain"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 375, "column": 34, "offset": 10340},
        "end": {"line": 375, "column": 44, "offset": 10351},
        "context": {"375": "    const domain4 = createDomain({foo: true})"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 375, "column": 34, "offset": 10340},
        "end": {"line": 375, "column": 44, "offset": 10351},
        "context": {"375": "    const domain4 = createDomain({foo: true})"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "createDomain"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "domainName"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object literal"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 375, "column": 34, "offset": 10340},
          "end": {"line": 375, "column": 44, "offset": 10351},
          "context": {"375": "    const domain4 = createDomain({foo: true})"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 378, "column": 51, "offset": 9112},
          "end": {"line": 378, "column": 56, "offset": 9118},
          "context": {
            "378": "declare export function createDomain(domainName?: string): Domain"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 391, "column": 13, "offset": 10710},
        "end": {"line": 391, "column": 14, "offset": 10712},
        "context": {"391": "    effect2(20)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 391, "column": 13, "offset": 10710},
        "end": {"line": 391, "column": 14, "offset": 10712},
        "context": {"391": "    effect2(20)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "effect2"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "20"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "payload"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 391, "column": 13, "offset": 10710},
          "end": {"line": 391, "column": 14, "offset": 10712},
          "context": {"391": "    effect2(20)"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 387, "column": 23, "offset": 10654},
          "end": {"line": 387, "column": 28, "offset": 10660},
          "context": {"387": "      handler(params: string) {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 395, "column": 13, "offset": 10796},
        "end": {"line": 395, "column": 14, "offset": 10798},
        "context": {"395": "    effect3(20)"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 395, "column": 13, "offset": 10796},
        "end": {"line": 395, "column": 14, "offset": 10798},
        "context": {"395": "    effect3(20)"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "effect3"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "20"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "payload"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 395, "column": 13, "offset": 10796},
          "end": {"line": 395, "column": 14, "offset": 10798},
          "context": {"395": "    effect3(20)"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 385, "column": 27, "offset": 10551},
          "end": {"line": 385, "column": 32, "offset": 10557},
          "context": {
            "385": "    const effect1: Effect<string, number, Error> = domain.effect()"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 483, "column": 17, "offset": 13147},
        "end": {"line": 483, "column": 18, "offset": 13149},
        "context": {"483": "    launch(foo, '')"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 483, "column": 17, "offset": 13147},
        "end": {"line": 483, "column": 18, "offset": 13149},
        "context": {"483": "    launch(foo, '')"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "launch"},
        {"kind": "Text", "text": " with empty string bound to "},
        {"kind": "Code", "text": "payload"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 483, "column": 17, "offset": 13147},
          "end": {"line": 483, "column": 18, "offset": 13149},
          "context": {"483": "    launch(foo, '')"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 464, "column": 29, "offset": 12671},
          "end": {"line": 464, "column": 34, "offset": 12677},
          "context": {"464": "    const foo = createEvent<number>()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 524, "column": 61, "offset": 14244},
        "end": {"line": 524, "column": 75, "offset": 14259},
        "context": {
          "524": "        const createComponent_initialProps_check2: string = initialProps.id"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 524, "column": 61, "offset": 14244},
        "end": {"line": 524, "column": 75, "offset": 14259},
        "context": {
          "524": "        const createComponent_initialProps_check2: string = initialProps.id"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "initialProps.id"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "createComponent_initialProps_check2"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 522, "column": 27, "offset": 14094},
          "end": {"line": 522, "column": 32, "offset": 14100},
          "context": {"522": "      (initialProps: {id: number}) => {"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 524, "column": 52, "offset": 14235},
          "end": {"line": 524, "column": 57, "offset": 14241},
          "context": {
            "524": "        const createComponent_initialProps_check2: string = initialProps.id"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 525, "column": 74, "offset": 14333},
        "end": {"line": 525, "column": 84, "offset": 14344},
        "context": {
          "525": "        const createComponent_initialProps_check3: string = initialProps.unknownProp"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 525, "column": 61, "offset": 14320},
        "end": {"line": 525, "column": 84, "offset": 14344},
        "context": {
          "525": "        const createComponent_initialProps_check3: string = initialProps.unknownProp"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "initialProps.unknownProp"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "unknownProp"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 522, "column": 22, "offset": 14089},
          "end": {"line": 522, "column": 33, "offset": 14101},
          "context": {"522": "      (initialProps: {id: number}) => {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 530, "column": 61, "offset": 14586},
        "end": {"line": 530, "column": 70, "offset": 14596},
        "context": {
          "530": "        const createComponent_initialProps_check5: number = state.text"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
        "type": "SourceFile",
        "start": {"line": 530, "column": 61, "offset": 14586},
        "end": {"line": 530, "column": 70, "offset": 14596},
        "context": {
          "530": "        const createComponent_initialProps_check5: number = state.text"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot assign "},
        {"kind": "Code", "text": "state.text"},
        {"kind": "Text", "text": " to "},
        {"kind": "Code", "text": "createComponent_initialProps_check5"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 518, "column": 15, "offset": 13998},
          "end": {"line": 518, "column": 20, "offset": 14004},
          "context": {"518": "        text: string,"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/types/types.test.js",
          "type": "SourceFile",
          "start": {"line": 530, "column": 52, "offset": 14577},
          "end": {"line": 530, "column": 57, "offset": 14583},
          "context": {
            "530": "        const createComponent_initialProps_check5: number = state.text"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/src/vue/__tests__/index.test.js",
        "type": "SourceFile",
        "start": {"line": 4, "column": 30, "offset": 77},
        "end": {"line": 4, "column": 43, "offset": 91},
        "context": {"4": "const Vue: VueType = require('vue/dist/vue')"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "vue/dist/vue"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/test_dir/events.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 14, "offset": 65},
        "end": {"line": 5, "column": 26, "offset": 78},
        "context": {"5": "const pong = createEvent()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/test_dir/events.js",
          "type": "SourceFile",
          "start": {"line": 5, "column": 14, "offset": 65},
          "end": {"line": 5, "column": 26, "offset": 78},
          "context": {"5": "const pong = createEvent()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/test_dir/index.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 9, "offset": 17},
        "end": {"line": 3, "column": 13, "offset": 22},
        "context": {"3": "import {actor} from 'effector-react'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot import "},
        {"kind": "Code", "text": "actor"},
        {"kind": "Text", "text": " because there is no "},
        {"kind": "Code", "text": "actor"},
        {"kind": "Text", "text": " export in "},
        {"kind": "Code", "text": "effector-react"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/test_dir/meme.js",
        "type": "SourceFile",
        "start": {"line": 2, "column": 9, "offset": 16},
        "end": {"line": 2, "column": 13, "offset": 21},
        "context": {"2": "import {actor} from 'effector-react'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot import "},
        {"kind": "Code", "text": "actor"},
        {"kind": "Text", "text": " because there is no "},
        {"kind": "Code", "text": "actor"},
        {"kind": "Text", "text": " export in "},
        {"kind": "Code", "text": "effector-react"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 12, "column": 29, "offset": 256},
        "end": {"line": 12, "column": 55, "offset": 283},
        "context": {
          "12": "const CompLibrary = require('../../core/CompLibrary.js')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "../../core/CompLibrary.js"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 45, "column": 26, "offset": 1080},
        "end": {"line": 45, "column": 40, "offset": 1095},
        "context": {"45": "class HomeSplash extends React.Component {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "React.Component"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " with fewer than 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/react.js",
          "type": "LibFile",
          "start": {"line": 26, "column": 30, "offset": 616},
          "end": {"line": 26, "column": 50, "offset": 637},
          "context": {
            "26": "declare class React$Component<Props, State = void> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 90, "column": 38, "offset": 2426},
        "end": {"line": 90, "column": 46, "offset": 2435},
        "context": {"90": "          className={`button ${props.className}`}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 90, "column": 32, "offset": 2420},
        "end": {"line": 90, "column": 46, "offset": 2435},
        "context": {"90": "          className={`button ${props.className}`}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.className"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "className"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 113, "column": 11, "offset": 3070},
          "end": {"line": 113, "column": 49, "offset": 3109},
          "context": {
            "113": "          <Button href=\"/try\">Try it out</Button>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 92, "column": 25, "offset": 2491},
        "end": {"line": 92, "column": 30, "offset": 2497},
        "context": {"92": "          target={props.target}>"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 92, "column": 19, "offset": 2485},
        "end": {"line": 92, "column": 30, "offset": 2497},
        "context": {"92": "          target={props.target}>"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.target"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "target"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 108, "column": 11, "offset": 2917},
          "end": {"line": 112, "column": 19, "offset": 3059},
          "context": {
            "108": "          <Button",
            "109": "            className=\"getStarted\"",
            "110": "            href={docUrl('introduction/installation')}>",
            "111": "            Get started",
            "112": "          </Button>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 92, "column": 25, "offset": 2491},
        "end": {"line": 92, "column": 30, "offset": 2497},
        "context": {"92": "          target={props.target}>"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 92, "column": 19, "offset": 2485},
        "end": {"line": 92, "column": 30, "offset": 2497},
        "context": {"92": "          target={props.target}>"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.target"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "target"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 113, "column": 11, "offset": 3070},
          "end": {"line": 113, "column": 49, "offset": 3109},
          "context": {
            "113": "          <Button href=\"/try\">Try it out</Button>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 120, "column": 21, "offset": 3192},
        "end": {"line": 120, "column": 35, "offset": 3207},
        "context": {"120": "class Index extends React.Component {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "React.Component"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " with fewer than 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/react.js",
          "type": "LibFile",
          "start": {"line": 26, "column": 30, "offset": 616},
          "end": {"line": 26, "column": 50, "offset": 637},
          "context": {
            "26": "declare class React$Component<Props, State = void> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 128, "column": 19, "offset": 3416},
        "end": {"line": 128, "column": 20, "offset": 3418},
        "context": {"128": "        id={props.id}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 128, "column": 13, "offset": 3410},
        "end": {"line": 128, "column": 20, "offset": 3418},
        "context": {"128": "        id={props.id}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.id"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "id"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 161, "column": 7, "offset": 4218},
          "end": {"line": 171, "column": 14, "offset": 4514},
          "context": {
            "161": "      <Block background=\"dark\">",
            "162": "        {[",
            "163": "          {",
            "170": "        ]}",
            "171": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 128, "column": 19, "offset": 3416},
        "end": {"line": 128, "column": 20, "offset": 3418},
        "context": {"128": "        id={props.id}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 128, "column": 13, "offset": 3410},
        "end": {"line": 128, "column": 20, "offset": 3418},
        "context": {"128": "        id={props.id}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.id"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "id"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 175, "column": 7, "offset": 4557},
          "end": {"line": 184, "column": 14, "offset": 4816},
          "context": {
            "175": "      <Block background=\"light\">",
            "176": "        {[",
            "177": "          {",
            "183": "        ]}",
            "184": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 128, "column": 19, "offset": 3416},
        "end": {"line": 128, "column": 20, "offset": 3418},
        "context": {"128": "        id={props.id}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 128, "column": 13, "offset": 3410},
        "end": {"line": 128, "column": 20, "offset": 3418},
        "context": {"128": "        id={props.id}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.id"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "id"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 188, "column": 7, "offset": 4859},
          "end": {"line": 226, "column": 14, "offset": 6113},
          "context": {
            "188": "      <Block layout=\"threeColumn\">",
            "189": "        {[",
            "190": "          {",
            "225": "        ]}",
            "226": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 129, "column": 27, "offset": 3446},
        "end": {"line": 129, "column": 36, "offset": 3456},
        "context": {"129": "        background={props.background}>"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 129, "column": 21, "offset": 3440},
        "end": {"line": 129, "column": 36, "offset": 3456},
        "context": {"129": "        background={props.background}>"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.background"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "background"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 148, "column": 7, "offset": 3931},
          "end": {"line": 157, "column": 14, "offset": 4172},
          "context": {
            "148": "      <Block id=\"try\">",
            "149": "        {[",
            "150": "          {",
            "156": "        ]}",
            "157": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 129, "column": 27, "offset": 3446},
        "end": {"line": 129, "column": 36, "offset": 3456},
        "context": {"129": "        background={props.background}>"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 129, "column": 21, "offset": 3440},
        "end": {"line": 129, "column": 36, "offset": 3456},
        "context": {"129": "        background={props.background}>"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.background"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "background"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 188, "column": 7, "offset": 4859},
          "end": {"line": 226, "column": 14, "offset": 6113},
          "context": {
            "188": "      <Block layout=\"threeColumn\">",
            "189": "        {[",
            "190": "          {",
            "225": "        ]}",
            "226": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 133, "column": 25, "offset": 3563},
        "end": {"line": 133, "column": 30, "offset": 3569},
        "context": {"133": "          layout={props.layout}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 133, "column": 19, "offset": 3557},
        "end": {"line": 133, "column": 30, "offset": 3569},
        "context": {"133": "          layout={props.layout}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.layout"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "layout"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 148, "column": 7, "offset": 3931},
          "end": {"line": 157, "column": 14, "offset": 4172},
          "context": {
            "148": "      <Block id=\"try\">",
            "149": "        {[",
            "150": "          {",
            "156": "        ]}",
            "157": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 133, "column": 25, "offset": 3563},
        "end": {"line": 133, "column": 30, "offset": 3569},
        "context": {"133": "          layout={props.layout}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 133, "column": 19, "offset": 3557},
        "end": {"line": 133, "column": 30, "offset": 3569},
        "context": {"133": "          layout={props.layout}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.layout"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "layout"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 161, "column": 7, "offset": 4218},
          "end": {"line": 171, "column": 14, "offset": 4514},
          "context": {
            "161": "      <Block background=\"dark\">",
            "162": "        {[",
            "163": "          {",
            "170": "        ]}",
            "171": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 133, "column": 25, "offset": 3563},
        "end": {"line": 133, "column": 30, "offset": 3569},
        "context": {"133": "          layout={props.layout}"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
        "type": "SourceFile",
        "start": {"line": 133, "column": 19, "offset": 3557},
        "end": {"line": 133, "column": 30, "offset": 3569},
        "context": {"133": "          layout={props.layout}"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "props.layout"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "layout"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/client/pages/en/index.js",
          "type": "SourceFile",
          "start": {"line": 175, "column": 7, "offset": 4557},
          "end": {"line": 184, "column": 14, "offset": 4816},
          "context": {
            "175": "      <Block background=\"light\">",
            "176": "        {[",
            "177": "          {",
            "183": "        ]}",
            "184": "      </Block>"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 6, "column": 24, "offset": 153},
        "end": {"line": 6, "column": 35, "offset": 165},
        "context": {"6": "import CodeMirror from 'codemirror'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 8, "column": 8, "offset": 222},
        "end": {"line": 8, "column": 32, "offset": 247},
        "context": {"8": "import 'codemirror/mode/jsx/jsx'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/mode/jsx/jsx"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 10, "column": 8, "offset": 256},
        "end": {"line": 10, "column": 39, "offset": 288},
        "context": {"10": "import 'codemirror/addon/lint/lint.css'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/lint/lint.css"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 8, "offset": 296},
        "end": {"line": 11, "column": 35, "offset": 324},
        "context": {"11": "import 'codemirror/addon/lint/lint'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/lint/lint"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 12, "column": 8, "offset": 332},
        "end": {"line": 12, "column": 41, "offset": 366},
        "context": {"12": "import 'codemirror/addon/comment/comment'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/comment/comment"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 13, "column": 8, "offset": 374},
        "end": {"line": 13, "column": 39, "offset": 406},
        "context": {"13": "import 'codemirror/addon/wrap/hardwrap'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/wrap/hardwrap"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 14, "column": 8, "offset": 414},
        "end": {"line": 14, "column": 41, "offset": 448},
        "context": {"14": "import 'codemirror/addon/fold/foldgutter'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/fold/foldgutter"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 15, "column": 8, "offset": 456},
        "end": {"line": 15, "column": 41, "offset": 490},
        "context": {"15": "import 'codemirror/addon/fold/brace-fold'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/fold/brace-fold"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 16, "column": 8, "offset": 498},
        "end": {"line": 16, "column": 43, "offset": 534},
        "context": {"16": "import 'codemirror/addon/fold/comment-fold'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/fold/comment-fold"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 17, "column": 8, "offset": 542},
        "end": {"line": 17, "column": 34, "offset": 569},
        "context": {"17": "import 'codemirror/keymap/sublime'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/keymap/sublime"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 19, "column": 8, "offset": 621},
        "end": {"line": 19, "column": 45, "offset": 659},
        "context": {"19": "import 'codemirror/addon/fold/foldgutter.css'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "codemirror/addon/fold/foldgutter.css"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 50, "column": 46, "offset": 1488},
        "end": {"line": 50, "column": 60, "offset": 1503},
        "context": {
          "50": "export default class CodeMirrorPanel extends React.Component {"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "React.Component"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " with fewer than 1 type argument."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/react.js",
          "type": "LibFile",
          "start": {"line": 26, "column": 30, "offset": 616},
          "end": {"line": 26, "column": 50, "offset": 637},
          "context": {
            "26": "declare class React$Component<Props, State = void> {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 61, "column": 16, "offset": 1764},
        "end": {"line": 61, "column": 28, "offset": 1777},
        "context": {"61": "    setCursor: createEvent(),"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
          "type": "SourceFile",
          "start": {"line": 61, "column": 16, "offset": 1764},
          "end": {"line": 61, "column": 28, "offset": 1777},
          "context": {"61": "    setCursor: createEvent(),"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 62, "column": 15, "offset": 1793},
        "end": {"line": 62, "column": 28, "offset": 1807},
        "context": {"62": "    markLine: createEffect(),"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Done"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Done"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
          "type": "SourceFile",
          "start": {"line": 62, "column": 15, "offset": 1793},
          "end": {"line": 62, "column": 28, "offset": 1807},
          "context": {"62": "    markLine: createEffect(),"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 62, "column": 15, "offset": 1793},
        "end": {"line": 62, "column": 28, "offset": 1807},
        "context": {"62": "    markLine: createEffect(),"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Fail"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Fail"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
          "type": "SourceFile",
          "start": {"line": 62, "column": 15, "offset": 1793},
          "end": {"line": 62, "column": 28, "offset": 1807},
          "context": {"62": "    markLine: createEffect(),"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 62, "column": 15, "offset": 1793},
        "end": {"line": 62, "column": 28, "offset": 1807},
        "context": {"62": "    markLine: createEffect(),"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Params"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Params"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
          "type": "SourceFile",
          "start": {"line": 62, "column": 15, "offset": 1793},
          "end": {"line": 62, "column": 28, "offset": 1807},
          "context": {"62": "    markLine: createEffect(),"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 123, "column": 22, "offset": 3251},
        "end": {"line": 123, "column": 30, "offset": 3260},
        "context": {"123": "  componentDidUpdate(prevProps) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "prevProps"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 132, "column": 15, "offset": 3540},
        "end": {"line": 132, "column": 19, "offset": 3545},
        "context": {"132": "  updateValue(value) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "value"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 145, "column": 19, "offset": 3843},
        "end": {"line": 145, "column": 21, "offset": 3846},
        "context": {"145": "  handleChange = (doc, change) => {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "doc"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/CodeMirrorPanel.js",
        "type": "SourceFile",
        "start": {"line": 145, "column": 24, "offset": 3848},
        "end": {"line": 145, "column": 29, "offset": 3854},
        "context": {"145": "  handleChange = (doc, change) => {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "change"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 37, "column": 16, "offset": 850},
        "end": {"line": 37, "column": 21, "offset": 856},
        "context": {"37": "      log.data.length > 0"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 37, "column": 7, "offset": 841},
        "end": {"line": 37, "column": 21, "offset": 856},
        "context": {"37": "      log.data.length > 0"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "log.data.length"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "length"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 38, "column": 26, "offset": 886},
        "end": {"line": 38, "column": 26, "offset": 887},
        "context": {"38": "      && typeof log.data[0] === 'string'"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 38, "column": 17, "offset": 877},
        "end": {"line": 38, "column": 27, "offset": 888},
        "context": {"38": "      && typeof log.data[0] === 'string'"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "log.data[0]"},
        {
          "kind": "Text",
          "text": " because an index signature declaring the expected key / value type is missing in "
        },
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 41, "column": 31, "offset": 979},
        "end": {"line": 41, "column": 38, "offset": 987},
        "context": {"41": "      return <Formatted data={log.data} />"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 41, "column": 14, "offset": 962},
        "end": {"line": 41, "column": 42, "offset": 991},
        "context": {"41": "      return <Formatted data={log.data} />"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot create "},
        {"kind": "Code", "text": "Formatted"},
        {"kind": "Text", "text": " element because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "array type"}]
        },
        {"kind": "Text", "text": " in property "},
        {"kind": "Code", "text": "data"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/message-parsers/Formatted.js",
          "type": "SourceFile",
          "start": {"line": 10, "column": 9, "offset": 189},
          "end": {"line": 10, "column": 13, "offset": 194},
          "context": {"10": "  data: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 46, "column": 16, "offset": 1042},
        "end": {"line": 46, "column": 20, "offset": 1047},
        "context": {
          "46": "      log.data.every(message => typeof message === 'string')"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 46, "column": 7, "offset": 1033},
        "end": {"line": 46, "column": 60, "offset": 1087},
        "context": {
          "46": "      log.data.every(message => typeof message === 'string')"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "log.data.every"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "every"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 53, "column": 36, "offset": 1232},
        "end": {"line": 53, "column": 36, "offset": 1233},
        "context": {"53": "    const quoted = typeof log.data[0] !== 'string'"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/Message.js",
        "type": "SourceFile",
        "start": {"line": 53, "column": 27, "offset": 1223},
        "end": {"line": 53, "column": 37, "offset": 1234},
        "context": {"53": "    const quoted = typeof log.data[0] !== 'string'"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "log.data[0]"},
        {
          "kind": "Text",
          "text": " because an index signature declaring the expected key / value type is missing in "
        },
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/format-message.js",
        "type": "SourceFile",
        "start": {"line": 50, "column": 47, "offset": 1220},
        "end": {"line": 50, "column": 54, "offset": 1228},
        "context": {
          "50": "        currentStyle[property] = buffer.style[property]"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/format-message.js",
        "type": "SourceFile",
        "start": {"line": 50, "column": 34, "offset": 1207},
        "end": {"line": 50, "column": 55, "offset": 1229},
        "context": {
          "50": "        currentStyle[property] = buffer.style[property]"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "buffer.style[property]"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "number"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/cssom.js",
          "type": "LibFile",
          "start": {"line": 389, "column": 20, "offset": 9701},
          "end": {"line": 389, "column": 25, "offset": 9707},
          "context": {"389": "  [index: number]: string;"}
        },
        "2": {
          "source": "/private/tmp/flow/flowlib_8824e6f/cssom.js",
          "type": "LibFile",
          "start": {"line": 389, "column": 11, "offset": 9692},
          "end": {"line": 389, "column": 16, "offset": 9698},
          "context": {"389": "  [index: number]: string;"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/index.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 21, "offset": 29},
        "end": {"line": 3, "column": 36, "offset": 45},
        "context": {"3": "import Linkify from 'linkifyjs/html'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "linkifyjs/html"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/string-utils.js",
        "type": "SourceFile",
        "start": {"line": 209, "column": 30, "offset": 6285},
        "end": {"line": 209, "column": 39, "offset": 6295},
        "context": {"209": "    if (!(token.specifier in formatters)) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot use "},
        {"kind": "Code", "text": "in"},
        {"kind": "Text", "text": " because on the right-hand side, "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " must be an object or array."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/string-utils.js",
          "type": "SourceFile",
          "start": {"line": 144, "column": 16, "offset": 4575},
          "end": {"line": 144, "column": 18, "offset": 4578},
          "context": {"144": "  formatters?: any,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/string-utils.js",
        "type": "SourceFile",
        "start": {"line": 222, "column": 18, "offset": 6656},
        "end": {"line": 222, "column": 32, "offset": 6671},
        "context": {"222": "      formatters[token.specifier]("}
      },
      "rootLoc": null,
      "messageMarkup": [
        {
          "kind": "Text",
          "text": "an index signature declaring the expected key / value type is missing in "
        },
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/devtools-parser/string-utils.js",
          "type": "SourceFile",
          "start": {"line": 144, "column": 16, "offset": 4575},
          "end": {"line": 144, "column": 18, "offset": 4578},
          "context": {"144": "  formatters?: any,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/message-parsers/Error.js",
        "type": "SourceFile",
        "start": {"line": 5, "column": 21, "offset": 100},
        "end": {"line": 5, "column": 37, "offset": 117},
        "context": {"5": "import Linkify from 'linkifyjs/react'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "linkifyjs/react"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/message-parsers/Error.js",
        "type": "SourceFile",
        "start": {"line": 37, "column": 33, "offset": 1068},
        "end": {"line": 37, "column": 36, "offset": 1072},
        "context": {
          "37": "      return <Linkify>{log.data.join(' ')}</Linkify>"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/message-parsers/Error.js",
        "type": "SourceFile",
        "start": {"line": 37, "column": 24, "offset": 1059},
        "end": {"line": 37, "column": 41, "offset": 1077},
        "context": {
          "37": "      return <Linkify>{log.data.join(' ')}</Linkify>"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "log.data.join"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "join"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/message-parsers/Object.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 21, "offset": 157},
        "end": {"line": 7, "column": 37, "offset": 174},
        "context": {"7": "import Linkify from 'linkifyjs/react'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "linkifyjs/react"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Outline.js",
        "type": "SourceFile",
        "start": {"line": 70, "column": 25, "offset": 1380},
        "end": {"line": 70, "column": 72, "offset": 1428},
        "context": {
          "70": "export default function({style, component, domain, event, effect, store}) {"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for destructuring."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 47, "column": 23, "offset": 1124},
        "end": {"line": 47, "column": 61, "offset": 1163},
        "context": {
          "47": "    return decompress(localStorage.getItem('code-compressed'))"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 47, "column": 23, "offset": 1124},
        "end": {"line": 47, "column": 61, "offset": 1163},
        "context": {
          "47": "    return decompress(localStorage.getItem('code-compressed'))"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "decompress"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "localStorage.getItem(...)"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "input"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "null or undefined"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "string"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/dom.js",
          "type": "LibFile",
          "start": {"line": 3843, "column": 25, "offset": 170269},
          "end": {"line": 3843, "column": 31, "offset": 170276},
          "context": {"3843": "  getItem(key: string): ?string;"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/compression.js",
          "type": "SourceFile",
          "start": {"line": 117, "column": 35, "offset": 3249},
          "end": {"line": 117, "column": 40, "offset": 3255},
          "context": {"117": "export const decompress = (input: string) => {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 60, "column": 31, "offset": 1381},
        "end": {"line": 60, "column": 61, "offset": 1412},
        "context": {
          "60": "export const realmClearNode = createEvent('realm clear node')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 60, "column": 31, "offset": 1381},
          "end": {"line": 60, "column": 61, "offset": 1412},
          "context": {
            "60": "export const realmClearNode = createEvent('realm clear node')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 61, "column": 27, "offset": 1439},
        "end": {"line": 61, "column": 60, "offset": 1473},
        "context": {
          "61": "export const realmEvent = createEvent('realm event created')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 61, "column": 27, "offset": 1439},
          "end": {"line": 61, "column": 60, "offset": 1473},
          "context": {
            "61": "export const realmEvent = createEvent('realm event created')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 62, "column": 27, "offset": 1500},
        "end": {"line": 62, "column": 60, "offset": 1534},
        "context": {
          "62": "export const realmStore = createEvent('realm store created')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 62, "column": 27, "offset": 1500},
          "end": {"line": 62, "column": 60, "offset": 1534},
          "context": {
            "62": "export const realmStore = createEvent('realm store created')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 63, "column": 28, "offset": 1562},
        "end": {"line": 63, "column": 62, "offset": 1597},
        "context": {
          "63": "export const realmEffect = createEvent('realm effect created')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 63, "column": 28, "offset": 1562},
          "end": {"line": 63, "column": 62, "offset": 1597},
          "context": {
            "63": "export const realmEffect = createEvent('realm effect created')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 64, "column": 28, "offset": 1625},
        "end": {"line": 64, "column": 62, "offset": 1660},
        "context": {
          "64": "export const realmDomain = createEvent('realm domain created')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 64, "column": 28, "offset": 1625},
          "end": {"line": 64, "column": 62, "offset": 1660},
          "context": {
            "64": "export const realmDomain = createEvent('realm domain created')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 65, "column": 31, "offset": 1691},
        "end": {"line": 65, "column": 68, "offset": 1729},
        "context": {
          "65": "export const realmComponent = createEvent('realm component created')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 65, "column": 31, "offset": 1691},
          "end": {"line": 65, "column": 68, "offset": 1729},
          "context": {
            "65": "export const realmComponent = createEvent('realm component created')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 66, "column": 28, "offset": 1757},
        "end": {"line": 66, "column": 54, "offset": 1784},
        "context": {
          "66": "export const realmInvoke = createEvent('realm invoke')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 66, "column": 28, "offset": 1757},
          "end": {"line": 66, "column": 54, "offset": 1784},
          "context": {
            "66": "export const realmInvoke = createEvent('realm invoke')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 67, "column": 28, "offset": 1812},
        "end": {"line": 67, "column": 61, "offset": 1846},
        "context": {
          "67": "export const realmStatus = createEvent('realm status update')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 67, "column": 28, "offset": 1812},
          "end": {"line": 67, "column": 61, "offset": 1846},
          "context": {
            "67": "export const realmStatus = createEvent('realm status update')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 69, "column": 30, "offset": 1877},
        "end": {"line": 69, "column": 66, "offset": 1914},
        "context": {
          "69": "export const realmInterval = createEvent('realm setInterval call')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 69, "column": 30, "offset": 1877},
          "end": {"line": 69, "column": 66, "offset": 1914},
          "context": {
            "69": "export const realmInterval = createEvent('realm setInterval call')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 70, "column": 29, "offset": 1943},
        "end": {"line": 70, "column": 64, "offset": 1979},
        "context": {
          "70": "export const realmTimeout = createEvent('realm setTimeout call')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 70, "column": 29, "offset": 1943},
          "end": {"line": 70, "column": 64, "offset": 1979},
          "context": {
            "70": "export const realmTimeout = createEvent('realm setTimeout call')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 72, "column": 27, "offset": 2007},
        "end": {"line": 72, "column": 57, "offset": 2038},
        "context": {
          "72": "export const evalEffect = createEffect('eval realm code')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Done"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Done"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 72, "column": 27, "offset": 2007},
          "end": {"line": 72, "column": 57, "offset": 2038},
          "context": {
            "72": "export const evalEffect = createEffect('eval realm code')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 72, "column": 27, "offset": 2007},
        "end": {"line": 72, "column": 57, "offset": 2038},
        "context": {
          "72": "export const evalEffect = createEffect('eval realm code')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Fail"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Fail"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 72, "column": 27, "offset": 2007},
          "end": {"line": 72, "column": 57, "offset": 2038},
          "context": {
            "72": "export const evalEffect = createEffect('eval realm code')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 72, "column": 27, "offset": 2007},
        "end": {"line": 72, "column": 57, "offset": 2038},
        "context": {
          "72": "export const evalEffect = createEffect('eval realm code')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Params"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Params"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 72, "column": 27, "offset": 2007},
          "end": {"line": 72, "column": 57, "offset": 2038},
          "context": {
            "72": "export const evalEffect = createEffect('eval realm code')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 74, "column": 30, "offset": 2069},
        "end": {"line": 74, "column": 58, "offset": 2098},
        "context": {
          "74": "export const changeSources = createEvent('change sources')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 74, "column": 30, "offset": 2069},
          "end": {"line": 74, "column": 58, "offset": 2098},
          "context": {
            "74": "export const changeSources = createEvent('change sources')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 76, "column": 30, "offset": 2129},
        "end": {"line": 76, "column": 58, "offset": 2158},
        "context": {
          "76": "export const selectVersion = createEvent('select version')"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 76, "column": 30, "offset": 2129},
          "end": {"line": 76, "column": 58, "offset": 2158},
          "context": {
            "76": "export const selectVersion = createEvent('select version')"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 81, "column": 24, "offset": 2285},
        "end": {"line": 81, "column": 54, "offset": 2316},
        "context": {
          "81": "export const version = createStore(defaultVersions[0])"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createStore"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 306, "column": 36, "offset": 7422},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {
            "306": "declare export function createStore<State>(",
            "307": "  defaultState: State,",
            "308": "  config?: {name?: string, ...},",
            "309": "): Store<State>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 81, "column": 24, "offset": 2285},
          "end": {"line": 81, "column": 54, "offset": 2316},
          "context": {
            "81": "export const version = createStore(defaultVersions[0])"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 82, "column": 32, "offset": 2348},
        "end": {"line": 82, "column": 59, "offset": 2376},
        "context": {
          "82": "export const packageVersions = createStore(defaultVersions)"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createStore"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 306, "column": 36, "offset": 7422},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {
            "306": "declare export function createStore<State>(",
            "307": "  defaultState: State,",
            "308": "  config?: {name?: string, ...},",
            "309": "): Store<State>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 82, "column": 32, "offset": 2348},
          "end": {"line": 82, "column": 59, "offset": 2376},
          "context": {
            "82": "export const packageVersions = createStore(defaultVersions)"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 86, "column": 30, "offset": 2524},
        "end": {"line": 86, "column": 42, "offset": 2537},
        "context": {"86": "export const codeSetCursor = createEvent()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 86, "column": 30, "offset": 2524},
          "end": {"line": 86, "column": 42, "offset": 2537},
          "context": {"86": "export const codeSetCursor = createEvent()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 87, "column": 35, "offset": 2572},
        "end": {"line": 87, "column": 47, "offset": 2585},
        "context": {"87": "export const codeCursorActivity = createEvent()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "E"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEvent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 296, "column": 36, "offset": 7158},
          "end": {"line": 296, "column": 68, "offset": 7191},
          "context": {
            "296": "declare export function createEvent<E>(eventName?: string): Event<E>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 87, "column": 35, "offset": 2572},
          "end": {"line": 87, "column": 47, "offset": 2585},
          "context": {"87": "export const codeCursorActivity = createEvent()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 88, "column": 29, "offset": 2614},
        "end": {"line": 88, "column": 42, "offset": 2628},
        "context": {"88": "export const codeMarkLine = createEffect()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Done"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Done"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 88, "column": 29, "offset": 2614},
          "end": {"line": 88, "column": 42, "offset": 2628},
          "context": {"88": "export const codeMarkLine = createEffect()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 88, "column": 29, "offset": 2614},
        "end": {"line": 88, "column": 42, "offset": 2628},
        "context": {"88": "export const codeMarkLine = createEffect()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Fail"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Fail"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 88, "column": 29, "offset": 2614},
          "end": {"line": 88, "column": 42, "offset": 2628},
          "context": {"88": "export const codeMarkLine = createEffect()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 88, "column": 29, "offset": 2614},
        "end": {"line": 88, "column": 42, "offset": 2628},
        "context": {"88": "export const codeMarkLine = createEffect()"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Params"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Params"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createEffect"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 298, "column": 37, "offset": 7229},
          "end": {"line": 304, "column": 29, "offset": 7385},
          "context": {
            "298": "declare export function createEffect<Params, Done, Fail>(",
            "299": "  effectName?: string,",
            "300": "  config?: {",
            "303": "  },",
            "304": "): Effect<Params, Done, Fail>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 88, "column": 29, "offset": 2614},
          "end": {"line": 88, "column": 42, "offset": 2628},
          "context": {"88": "export const codeMarkLine = createEffect()"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
        "type": "SourceFile",
        "start": {"line": 107, "column": 22, "offset": 2926},
        "end": {"line": 113, "column": 2, "offset": 3013},
        "context": {
          "107": "export const stats = createStore({",
          "108": "  event: [],",
          "109": "  store: [],",
          "112": "  component: [],",
          "113": "})"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createStore"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 306, "column": 36, "offset": 7422},
          "end": {"line": 309, "column": 15, "offset": 7502},
          "context": {
            "306": "declare export function createStore<State>(",
            "307": "  defaultState: State,",
            "308": "  config?: {name?: string, ...},",
            "309": "): Store<State>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 107, "column": 22, "offset": 2926},
          "end": {"line": 113, "column": 2, "offset": 3013},
          "context": {
            "107": "export const stats = createStore({",
            "108": "  event: [],",
            "109": "  store: [],",
            "112": "  component: [],",
            "113": "})"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/evalExpr.js",
        "type": "SourceFile",
        "start": {"line": 8, "column": 46, "offset": 245},
        "end": {"line": 8, "column": 49, "offset": 249},
        "context": {"8": "export async function evalExpr(expr: string, vars) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "vars"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/index.js",
        "type": "SourceFile",
        "start": {"line": 9, "column": 30, "offset": 282},
        "end": {"line": 9, "column": 48, "offset": 301},
        "context": {"9": "import {registerPlugin} from '@babel/standalone'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "@babel/standalone"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/index.js",
        "type": "SourceFile",
        "start": {"line": 101, "column": 30, "offset": 2850},
        "end": {"line": 101, "column": 37, "offset": 2858},
        "context": {
          "101": "  const env = prepareRuntime(effector, version.getState())"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/index.js",
        "type": "SourceFile",
        "start": {"line": 101, "column": 30, "offset": 2850},
        "end": {"line": 101, "column": 37, "offset": 2858},
        "context": {
          "101": "  const env = prepareRuntime(effector, version.getState())"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "prepareRuntime"},
        {"kind": "Text", "text": " with "},
        {"kind": "Code", "text": "effector"},
        {"kind": "Text", "text": " bound to "},
        {"kind": "Code", "text": "effector"},
        {"kind": "Text", "text": " because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "module "},
            {"kind": "Code", "text": "effector"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/core.js",
          "type": "LibFile",
          "start": {"line": 586, "column": 22, "offset": 21030},
          "end": {"line": 586, "column": 25, "offset": 21034},
          "context": {"586": "    get(key: K): V | void;"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/prepareRuntime.js",
          "type": "SourceFile",
          "start": {"line": 11, "column": 42, "offset": 308},
          "end": {"line": 11, "column": 56, "offset": 323},
          "context": {
            "11": "export function prepareRuntime(effector: typeof Effector, version: string) {"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/scopedEval.js",
        "type": "SourceFile",
        "start": {"line": 49, "column": 19, "offset": 1396},
        "end": {"line": 49, "column": 21, "offset": 1399},
        "context": {"49": "  return function(env) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "env"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/scopedEval.js",
        "type": "SourceFile",
        "start": {"line": 58, "column": 19, "offset": 1595},
        "end": {"line": 58, "column": 21, "offset": 1598},
        "context": {"58": "  return function(env) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "env"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/stackframe/getSourceMap.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 33, "offset": 45},
        "end": {"line": 3, "column": 44, "offset": 57},
        "context": {"3": "import {SourceMapConsumer} from 'source-map'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "source-map"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/evaluator/stackframe/mapper.js",
        "type": "SourceFile",
        "start": {"line": 7, "column": 22, "offset": 207},
        "end": {"line": 7, "column": 37, "offset": 223},
        "context": {"7": "import {settle} from 'settle-promise'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "settle-promise"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/flow/domain.js",
        "type": "SourceFile",
        "start": {"line": 26, "column": 17, "offset": 464},
        "end": {"line": 26, "column": 25, "offset": 473},
        "context": {"26": "    code: Array<FlowError> | 'fail',"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve name "},
        {"kind": "Code", "text": "FlowError"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/flow/dynamic.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 9, "offset": 17},
        "end": {"line": 3, "column": 12, "offset": 21},
        "context": {
          "3": "import {flow, typeAtPos as _typeAtPos} from '@zerobias/codebox'"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot import "},
        {"kind": "Code", "text": "flow"},
        {"kind": "Text", "text": " because there is no "},
        {"kind": "Code", "text": "flow"},
        {"kind": "Text", "text": " export in "},
        {"kind": "Code", "text": "@zerobias/codebox"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/flow/dynamic.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 15, "offset": 23},
        "end": {"line": 3, "column": 23, "offset": 32},
        "context": {
          "3": "import {flow, typeAtPos as _typeAtPos} from '@zerobias/codebox'"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot import "},
        {"kind": "Code", "text": "typeAtPos"},
        {"kind": "Text", "text": " because there is no "},
        {"kind": "Code", "text": "typeAtPos"},
        {"kind": "Text", "text": " export in "},
        {"kind": "Code", "text": "@zerobias/codebox"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/flow/dynamic.js",
        "type": "SourceFile",
        "start": {"line": 35, "column": 52, "offset": 1097},
        "end": {"line": 35, "column": 52, "offset": 1098},
        "context": {
          "35": "  .on(typeAtPos.done, (_, {result}) => result.code.c)"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/flow/dynamic.js",
        "type": "SourceFile",
        "start": {"line": 35, "column": 40, "offset": 1085},
        "end": {"line": 35, "column": 52, "offset": 1098},
        "context": {
          "35": "  .on(typeAtPos.done, (_, {result}) => result.code.c)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "result.code.c"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "c"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "String"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/private/tmp/flow/flowlib_8824e6f/core.js",
          "type": "LibFile",
          "start": {"line": 310, "column": 15, "offset": 11736},
          "end": {"line": 310, "column": 20, "offset": 11742},
          "context": {"310": "declare class String {"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/flow/view.js",
        "type": "SourceFile",
        "start": {"line": 26, "column": 51, "offset": 561},
        "end": {"line": 26, "column": 51, "offset": 562},
        "context": {
          "26": "export const TypeHintView = createComponent<{||}, _>(typeHint, ({}, type) => {"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {
          "kind": "Text",
          "text": "Please use a concrete type annotation instead of "
        },
        {"kind": "Code", "text": "_"},
        {"kind": "Text", "text": " in this position."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/css.js",
        "type": "SourceFile",
        "start": {"line": 3, "column": 21, "offset": 29},
        "end": {"line": 3, "column": 23, "offset": 32},
        "context": {"3": "export function css(obj) {"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "obj"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 8, "column": 25, "offset": 186},
        "end": {"line": 13, "column": 1, "offset": 318},
        "context": {
          "8": "export const LogsView = createComponent(",
          "9": "  logs,",
          "10": "  ({style}: {|style: any|}, logs) => (",
          "12": "  ),",
          "13": ")"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "Props"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "Props"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createComponent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector-react/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 78, "column": 40, "offset": 1767},
          "end": {"line": 81, "column": 26, "offset": 1878},
          "context": {
            "78": "declare export function createComponent<Props, State>(",
            "79": "  store: Store<State>,",
            "80": "  view: (props: Props, state: State) => Node,",
            "81": "): StoreView<State, Props>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
          "type": "SourceFile",
          "start": {"line": 8, "column": 25, "offset": 186},
          "end": {"line": 13, "column": 1, "offset": 318},
          "context": {
            "8": "export const LogsView = createComponent(",
            "9": "  logs,",
            "10": "  ({style}: {|style: any|}, logs) => (",
            "12": "  ),",
            "13": ")"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 8, "column": 25, "offset": 186},
        "end": {"line": 13, "column": 1, "offset": 318},
        "context": {
          "8": "export const LogsView = createComponent(",
          "9": "  logs,",
          "10": "  ({style}: {|style: any|}, logs) => (",
          "12": "  ),",
          "13": ")"
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Missing type annotation for "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": ". "},
        {"kind": "Code", "text": "State"},
        {"kind": "Text", "text": " is a type parameter declared in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "function type"}]
        },
        {"kind": "Text", "text": " and was implicitly instantiated at "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": "call of "},
            {"kind": "Code", "text": "createComponent"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector-react/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 78, "column": 40, "offset": 1767},
          "end": {"line": 81, "column": 26, "offset": 1878},
          "context": {
            "78": "declare export function createComponent<Props, State>(",
            "79": "  store: Store<State>,",
            "80": "  view: (props: Props, state: State) => Node,",
            "81": "): StoreView<State, Props>"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
          "type": "SourceFile",
          "start": {"line": 8, "column": 25, "offset": 186},
          "end": {"line": 13, "column": 1, "offset": 318},
          "context": {
            "8": "export const LogsView = createComponent(",
            "9": "  logs,",
            "10": "  ({style}: {|style: any|}, logs) => (",
            "12": "  ),",
            "13": ")"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 6, "offset": 255},
        "end": {"line": 11, "column": 12, "offset": 262},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 5, "offset": 254},
        "end": {"line": 11, "column": 61, "offset": 311},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot create "},
        {"kind": "Code", "text": "Console"},
        {"kind": "Text", "text": " element because property "},
        {"kind": "Code", "text": "className"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Props"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.js",
          "type": "SourceFile",
          "start": {"line": 9, "column": 39, "offset": 181},
          "end": {"line": 9, "column": 43, "offset": 186},
          "context": {
            "9": "class Console extends React.Component<Props, any> {"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
          "type": "SourceFile",
          "start": {"line": 11, "column": 5, "offset": 254},
          "end": {"line": 11, "column": 61, "offset": 311},
          "context": {
            "11": "    <Console className=\"console\" style={style} logs={logs} />"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 6, "offset": 255},
        "end": {"line": 11, "column": 12, "offset": 262},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 5, "offset": 254},
        "end": {"line": 11, "column": 61, "offset": 311},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot create "},
        {"kind": "Code", "text": "Console"},
        {"kind": "Text", "text": " element because property "},
        {"kind": "Code", "text": "style"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Props"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "props"}]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.js",
          "type": "SourceFile",
          "start": {"line": 9, "column": 39, "offset": 181},
          "end": {"line": 9, "column": 43, "offset": 186},
          "context": {
            "9": "class Console extends React.Component<Props, any> {"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
          "type": "SourceFile",
          "start": {"line": 11, "column": 5, "offset": 254},
          "end": {"line": 11, "column": 61, "offset": 311},
          "context": {
            "11": "    <Console className=\"console\" style={style} logs={logs} />"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 54, "offset": 303},
        "end": {"line": 11, "column": 57, "offset": 307},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 5, "offset": 254},
        "end": {"line": 11, "column": 61, "offset": 311},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot create "},
        {"kind": "Code", "text": "Console"},
        {"kind": "Text", "text": " element because property "},
        {"kind": "Code", "text": "id"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Message"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "object type"}]
        },
        {"kind": "Text", "text": " in array element of property "},
        {"kind": "Code", "text": "logs"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 106, "column": 9, "offset": 2253},
          "end": {"line": 106, "column": 15, "offset": 2260},
          "context": {"106": "  logs: Message[],"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/domain.js",
          "type": "SourceFile",
          "start": {"line": 13, "column": 39, "offset": 272},
          "end": {"line": 13, "column": 82, "offset": 316},
          "context": {
            "13": "export const logs = createStore<Array<{|id: number, method: Methods, data: any[]|}>>([])"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 54, "offset": 303},
        "end": {"line": 11, "column": 57, "offset": 307},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 5, "offset": 254},
        "end": {"line": 11, "column": 61, "offset": 311},
        "context": {
          "11": "    <Console className=\"console\" style={style} logs={logs} />"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot create "},
        {"kind": "Code", "text": "Console"},
        {"kind": "Text", "text": " element because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "array type"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [{"kind": "Text", "text": "undefined"}]
        },
        {"kind": "Text", "text": " in property "},
        {"kind": "Code", "text": "data"},
        {"kind": "Text", "text": " of array element of property "},
        {"kind": "Code", "text": "logs"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/logs/domain.js",
          "type": "SourceFile",
          "start": {"line": 13, "column": 76, "offset": 309},
          "end": {"line": 13, "column": 80, "offset": 314},
          "context": {
            "13": "export const logs = createStore<Array<{|id: number, method: Methods, data: any[]|}>>([])"
          }
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Console/index.h.js",
          "type": "SourceFile",
          "start": {"line": 7, "column": 10, "offset": 102},
          "end": {"line": 7, "column": 14, "offset": 107},
          "context": {"7": "  data?: any[],"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/settings/domain.js",
        "type": "SourceFile",
        "start": {"line": 8, "column": 47, "offset": 194},
        "end": {"line": 8, "column": 59, "offset": 207},
        "context": {
          "8": "  const snapshot = localStorage.getItem(store.compositeName.fullName)"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/settings/domain.js",
        "type": "SourceFile",
        "start": {"line": 8, "column": 41, "offset": 188},
        "end": {"line": 8, "column": 59, "offset": 207},
        "context": {
          "8": "  const snapshot = localStorage.getItem(store.compositeName.fullName)"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "store.compositeName"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "compositeName"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "InternalStore"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 159, "column": 22, "offset": 4205},
          "end": {"line": 159, "column": 50, "offset": 4234},
          "context": {
            "159": "    hook: (newStore: InternalStore<mixed_non_void>) => any,"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/settings/domain.js",
        "type": "SourceFile",
        "start": {"line": 15, "column": 32, "offset": 379},
        "end": {"line": 15, "column": 44, "offset": 392},
        "context": {
          "15": "    localStorage.setItem(store.compositeName.fullName, JSON.stringify(newState))"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/settings/domain.js",
        "type": "SourceFile",
        "start": {"line": 15, "column": 26, "offset": 373},
        "end": {"line": 15, "column": 44, "offset": 392},
        "context": {
          "15": "    localStorage.setItem(store.compositeName.fullName, JSON.stringify(newState))"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot get "},
        {"kind": "Code", "text": "store.compositeName"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "compositeName"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "InternalStore"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 159, "column": 22, "offset": 4205},
          "end": {"line": 159, "column": 50, "offset": 4234},
          "context": {
            "159": "    hook: (newStore: InternalStore<mixed_non_void>) => any,"
          }
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/switcher.js",
        "type": "SourceFile",
        "start": {"line": 42, "column": 40, "offset": 898},
        "end": {"line": 42, "column": 42, "offset": 901},
        "context": {"42": "        fn: ({source, item}) => source.map(item),"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/switcher.js",
        "type": "SourceFile",
        "start": {"line": 42, "column": 33, "offset": 891},
        "end": {"line": 42, "column": 48, "offset": 907},
        "context": {"42": "        fn: ({source, item}) => source.map(item),"}
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "source.map"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "map"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/switcher.js",
          "type": "SourceFile",
          "start": {"line": 12, "column": 16, "offset": 213},
          "end": {"line": 12, "column": 22, "offset": 220},
          "context": {"12": "  event: Event<Payload>,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/switcher.js",
        "type": "SourceFile",
        "start": {"line": 47, "column": 17, "offset": 993},
        "end": {"line": 47, "column": 22, "offset": 999},
        "context": {"47": "          from: source,"}
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/switcher.js",
        "type": "SourceFile",
        "start": {"line": 46, "column": 17, "offset": 975},
        "end": {"line": 49, "column": 9, "offset": 1030},
        "context": {
          "46": "        forward({",
          "47": "          from: source,",
          "48": "          to: item,",
          "49": "        })"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot call "},
        {"kind": "Code", "text": "forward"},
        {"kind": "Text", "text": " with object literal bound to "},
        {"kind": "Code", "text": "opts"},
        {"kind": "Text", "text": " because property "},
        {"kind": "Code", "text": "kind"},
        {"kind": "Text", "text": " is missing in "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Payload"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " but exists in "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Unit"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " in property "},
        {"kind": "Code", "text": "from"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/switcher.js",
          "type": "SourceFile",
          "start": {"line": 12, "column": 16, "offset": 213},
          "end": {"line": 12, "column": 22, "offset": 220},
          "context": {"12": "  event: Event<Payload>,"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/packages/effector/index.js.flow",
          "type": "SourceFile",
          "start": {"line": 275, "column": 10, "offset": 6574},
          "end": {"line": 275, "column": 16, "offset": 6581},
          "context": {"275": "  +from: Unit<T>,"}
        }
      }
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/tabs/view.js",
        "type": "SourceFile",
        "start": {"line": 11, "column": 19, "offset": 321},
        "end": {"line": 11, "column": 31, "offset": 334},
        "context": {"11": "import Media from 'react-media'"}
      },
      "rootLoc": null,
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot resolve module "},
        {"kind": "Code", "text": "react-media"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/tabs/view.js",
        "type": "SourceFile",
        "start": {"line": 23, "column": 41, "offset": 606},
        "end": {"line": 23, "column": 41, "offset": 607},
        "context": {
          "23": "export const TabsView = createComponent<_, _>(tab, (_, tab) => ("
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {
          "kind": "Text",
          "text": "Please use a concrete type annotation instead of "
        },
        {"kind": "Code", "text": "_"},
        {"kind": "Text", "text": " in this position."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/tabs/view.js",
        "type": "SourceFile",
        "start": {"line": 23, "column": 44, "offset": 609},
        "end": {"line": 23, "column": 44, "offset": 610},
        "context": {
          "23": "export const TabsView = createComponent<_, _>(tab, (_, tab) => ("
        }
      },
      "rootLoc": null,
      "messageMarkup": [
        {
          "kind": "Text",
          "text": "Please use a concrete type annotation instead of "
        },
        {"kind": "Code", "text": "_"},
        {"kind": "Text", "text": " in this position."}
      ],
      "referenceLocs": {}
    },
    {
      "kind": "infer",
      "level": "error",
      "suppressions": [],
      "classic": false,
      "primaryLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/view.js",
        "type": "SourceFile",
        "start": {"line": 52, "column": 38, "offset": 1341},
        "end": {"line": 52, "column": 42, "offset": 1346},
        "context": {
          "52": "    <Errors isError={isError} error={error} stackFrames={stackFrames} />"
        }
      },
      "rootLoc": {
        "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/view.js",
        "type": "SourceFile",
        "start": {"line": 52, "column": 5, "offset": 1308},
        "end": {"line": 52, "column": 72, "offset": 1376},
        "context": {
          "52": "    <Errors isError={isError} error={error} stackFrames={stackFrames} />"
        }
      },
      "messageMarkup": [
        {"kind": "Text", "text": "Cannot create "},
        {"kind": "Code", "text": "Errors"},
        {"kind": "Text", "text": " element because "},
        {
          "kind": "Reference",
          "referenceId": "1",
          "message": [{"kind": "Text", "text": "null"}]
        },
        {"kind": "Text", "text": " is incompatible with "},
        {
          "kind": "Reference",
          "referenceId": "2",
          "message": [
            {"kind": "Text", "text": ""},
            {"kind": "Code", "text": "Error"},
            {"kind": "Text", "text": ""}
          ]
        },
        {"kind": "Text", "text": " in property "},
        {"kind": "Code", "text": "error"},
        {"kind": "Text", "text": "."}
      ],
      "referenceLocs": {
        "1": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/domain.js",
          "type": "SourceFile",
          "start": {"line": 98, "column": 14, "offset": 2798},
          "end": {"line": 98, "column": 17, "offset": 2802},
          "context": {"98": "      error: null,"}
        },
        "2": {
          "source": "/Users/goodmind/Clouds/MEGAsync/development/web/projects/pending/effector_master/website/editor/src/components/Errors/index.js",
          "type": "SourceFile",
          "start": {"line": 25, "column": 10, "offset": 499},
          "end": {"line": 25, "column": 14, "offset": 504},
          "context": {"25": "  error: Error,"}
        }
      }
    }
  ],
  "passed": false
}
